{"version":3,"sources":["assets/images/236832.png","redux/dialogs-reducer.js","redux/users-reducer.js","components/Profile/MyPosts/Post/Post.module.css","components/Navbar/NavMenu/NavMenu.module.css","components/Navbar/NavFriends/NavFriends.module.css","components/common/FormsControls/FormsControls.jsx","api/api.js","serviceWorker.js","components/News/News.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","redux/profile-reducer.js","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/Navbar/NavMenu/NavMenu.jsx","components/Navbar/NavFriends/NavFriendsItem/NavFriendsItem.jsx","components/Navbar/NavFriends/NavFriends.jsx","components/Navbar/Navbar.jsx","components/Navbar/NavbarContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","components/Login/LoginContainer.jsx","redux/app-reducer.js","redux/navigation-reducer.js","redux/redux-store.js","hoc/withSuspense.js","App.jsx","index.js","components/common/FormsControls/FormsControl.module.css","components/common/Preloader/Preloader.jsx","utils/validators/validators.js","components/Login/Login.module.css","hoc/withAuthRedirect.js","components/Profile/ProfileInfo/ProfileStatus.module.css","components/Navbar/NavFriends/NavFriendsItem/NavFriendsItem.module.css","components/Header/Header.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/common/Preloader/Preloader.module.css"],"names":["module","exports","SEND_MESSAGE","initialState","dialogs","id","name","messages","message","dialogId","isMyMessage","sendMessage","newMessageText","type","dialogsReducer","state","action","TOGGLE_FOLLOW","SET_USERS","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","toggleFollow","userId","toggleIsFetching","toggleFollowingProgress","getUsers","page","dispatch","a","usersAPI","data","items","totalCount","follow","resultCode","usersReducer","map","u","followed","filter","InputArea","InputType","input","meta","touched","error","props","hasError","className","styles","formControl","createField","placeholder","validators","component","text","validate","instance","axios","withCredentials","baseURL","headers","get","then","response","post","delete","getProfile","console","warn","profileAPI","authAPI","authMe","login","email","password","rememberMe","captchaString","captcha","logout","getCaptcha","getStatus","updateStatus","status","put","uploadPhoto","photo","formData","FormData","append","saveProfile","profileData","Boolean","window","location","hostname","match","News","Post","s","item","src","alt","likesCounts","maxPostLength10","maxlength","textArea","AddPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","required","MyPosts","log","postsElements","posts","p","key","isOwner","posts_block","values","addPost","newPostText","ADD_POST","DELETE_POST","SET_STATUS","userProfile","setUserProfile","setStatus","getUserProfile","profileReducer","postId","photos","MyPostsContainer","this","params","React","Component","compose","connect","profilePage","withRouter","ProfileStatusWithHooks","useState","editMode","setEditMode","useEffect","statusBlock","statusMessage","onDoubleClick","statusInput","onChange","e","currentTarget","value","autoFocus","onBlur","ProfileDataReduxForm","initialValues","descriptionRightColunn","editDescriptionButton","descriptionItem","contactsBlock","Object","entries","contacts","k","formStyle","formSummaryError","ProfileData","goToEditMode","onClick","fullName","v","contactLink","target","href","lookingForAJob","lookingForAJobDescription","aboutMe","ProfileInfo","Preloader","description","avaBlock","ava_img","large","defaultUserPhoto","avaInput","files","length","avaInputLabel","for","offEditMode","deactivateEditMode","Profile","ProfileContainer","auth","refreshProfile","prevProps","file","getState","errors","forEach","exec","toLowerCase","stopSubmit","Promise","reject","withAuthRedirect","Music","Settings","NavMenu","nav","active","to","activeClassName","NavFriendsItem","ava","nickname","NavFriends","NavFriendsElements","friends","f","friendsElements","Navbar","isAuth","NavbarContainer","navigationData","Header","header","loginBlock","logoutButton","doLogout","SET_USER_DATA","GET_CAPTCHA_IRL","captchaUrl","setAuthUserData","payload","getCaptchaUrl","url","getAuthUserData","authReducer","HeaderContainer","LoginReduxForm","loginArea","loginForm","rememberMeArea","rememberMeBox","rememberMeText","Login","doLogin","_error","initialized","appReducer","navigationReducer","reducers","combineReducers","dialogsPage","usersPage","app","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddlware","__store__","withSuspense","fallback","DialogsContainer","lazy","UsersContainer","App","catchAllUnhadledErrors","PromiseRejectionEvent","alert","initializeApp","addEventListener","removeEventListener","exact","path","render","AppContainer","promise","all","MainApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","preloader","ldsRoller","undefined","maxLengthValue","fieldName","mapStateToPropsForRedirect","RedirectComponent"],"mappings":"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","file":"static/js/main.0e8cc13b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/236832.f07d66e0.png\";","const SEND_MESSAGE = 's_way_1/dialogs/SEND-MESSAGE'\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        { id: 1, name: \"Helen\" },\r\n        { id: 2, name: \"Alex\" },\r\n        { id: 3, name: \"Andrey\" },\r\n        { id: 4, name: \"Ivan\" }\r\n    ],\r\n    messages: [\r\n        { id: 1, message: \"Hi\", dialogId: 2, isMyMessage: true },\r\n        { id: 2, message: \"How is your name?\", dialogId: 2, isMyMessage: true },\r\n        { id: 3, message: \"My name is ...\", dialogId: 2, isMyMessage: false },\r\n        { id: 4, message: \"Yet another message\", dialogId: 2, isMyMessage: true },\r\n        { id: 5, message: \"Yet another message\", dialogId: 2, isMyMessage: false }\r\n    ]\r\n}\r\n\r\nconst dialogsReducer =  (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SEND_MESSAGE:\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, { id: 6, message: action.newMessageText, dialogId: 2, isMyMessage: true } ]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessage = (newMessageText) => ({ type: SEND_MESSAGE, newMessageText })\r\n\r\nexport default dialogsReducer;","import {usersAPI} from '../api/api';\r\n\r\nconst TOGGLE_FOLLOW = 's_way_1/users/TOGGLE_FOLLOW'\r\nconst SET_USERS = 's_way_1/users/SET_USERS'\r\nconst SET_CURRENT_PAGE = 's_way_1/users/SET_CURRENT_PAGE'\r\nconst SET_TOTAL_COUNT = 's_way_1/users/SET_TOTAL_COUNT'\r\nconst TOGGLE_IS_FETCHING = 's_way_1/users/TOGGLE_IS_FETCHING'\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 's_way_1/users/TOGGLE_IS_FOLLOWING_PROGRESS'\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 100,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n}\r\n\r\nconst usersReducer = ( state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n        case TOGGLE_FOLLOW:\r\n            return {\r\n                ...state,\r\n                // NOT WORK with updateObjectInArray from objects-helper.js // 90-redux-ducks video\r\n                // users: updateObjectInArray(state.users, action.userId, 'id', !state.users[action.userId].followed)\r\n                users: state.users.map( u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: !u.followed}\r\n                    }\r\n                return u;\r\n                })            \r\n            }\r\n        case SET_USERS: {\r\n            return { ...state, users: action.users }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return { ...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_COUNT: {\r\n            return { ...state, totalUsersCount: action.totalUsersCount}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return { ...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return { ...state, \r\n                followingInProgress: action.followingInProgress \r\n                ? [...state.followingInProgress, action.userId]\r\n                : [state.followingInProgress.filter(id => id !== action.userId)]}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const toggleFollow = (userId) => ({type: TOGGLE_FOLLOW, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_COUNT, totalUsersCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingProgress = (followingInProgress, userId) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, followingInProgress, userId})\r\n\r\nexport const getUsers = (page, pageSize) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    dispatch(setCurrentPage(page));\r\n\r\n    let data = await usersAPI.getUsers(page, pageSize);\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setUsers(data.items));\r\n    dispatch(setTotalUsersCount(data.totalCount));\r\n}\r\n\r\nexport const follow = (follow, userId) => async (dispatch) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let data = await usersAPI.follow(follow, userId);\r\n    if (data.resultCode === 0 || 1) {\r\n        dispatch(toggleFollow(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport default usersReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__16f_Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"NavMenu_nav__3p8TW\",\"item\":\"NavMenu_item__3hfDF\",\"active\":\"NavMenu_active__1OZW2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendsElements\":\"NavFriends_friendsElements__1xggS\"};","import React from 'react';\r\nimport styles from './FormsControl.module.css';\r\nimport { Field } from 'redux-form';\r\n\r\n\r\nexport const InputArea = InputType => ({input, meta: {touched, error}, ...props}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                <InputType {...input} {...props}/>\r\n            </div>\r\n            { hasError && <span>{error}</span> }\r\n        </div>   \r\n    )    \r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => {\r\n    return (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name} component={component} validate={validators} {...props}  /> {text}\r\n    </div>\r\n    )\r\n}","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"40a499b6-4421-4c8e-b336-09492ab319c5\"\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n\r\n    getUsers(currentPage, pageSize) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n        .then(response => response.data)\r\n    },\r\n    follow(follow, userId) {\r\n        return (follow ? instance.post(`follow/${userId}`) : instance.delete(`follow/${userId}`))\r\n            .then(response => response.data)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn(\"Obsolete method. Please use ProfileAPI object for getProfile\")\r\n        return profileAPI.getProfile(userId)\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n\r\n    authMe() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe=false, captchaString) {\r\n        return instance.post('/auth/login', {email: email, password: password, rememberMe: rememberMe, captcha: captchaString});\r\n    },\r\n    logout() {\r\n        return instance.delete('/auth/login');\r\n    },\r\n    getCaptcha() {\r\n        return instance.get('/security/get-captcha-url')\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get('profile/status/' + userId)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put('profile/status/', {status: status});\r\n    },\r\n    uploadPhoto(photo) {\r\n        const formData = new FormData();\r\n        formData.append('image', photo);\r\n        return instance.put('profile/photo/', formData, {\r\n            'Content-Type': 'multipath/form-data'\r\n        })\r\n    },\r\n    saveProfile(profileData) {\r\n        return instance.put('profile', profileData );\r\n    }\r\n\r\n}\r\n\r\nexport default null;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport './News.module.css'\r\n\r\nconst News = (props) => {\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default News;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\n\r\nconst Post = (props) => {\r\n\r\n    return (\r\n        <div className={s.item}>\r\n            <img src=\"https://avatarko.ru/img/kartinka/2/Gubka_Bob.jpg\" alt=\"Avatar\" />\r\n            { props.message }\r\n            <div>\r\n                <span>likes </span>\r\n                { props.likesCounts }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {reduxForm, Field } from 'redux-form';\r\nimport { required, maxlength } from '../../../utils/validators/validators';\r\nimport { InputArea } from '../../common/FormsControls/FormsControls';\r\n\r\nconst maxPostLength10 = maxlength(10, 'post');\r\nconst textArea = InputArea(\"textarea\")\r\n\r\nconst MyPosts = props => {\r\n    console.log('render MyPosts')\r\n    let postsElements = props.posts.map( p => <Post message={p.message} key={p.id} likesCounts={p.likesCounts}/>);\r\n    let addPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    };\r\n    return (\r\n        props.isOwner &&\r\n        <div className={s.posts_block}>\r\n            <h3>My posts</h3>\r\n            <AddPostReduxForm onSubmit={addPost}/>\r\n            <div className={s.posts}>\r\n                { postsElements }\r\n            </div >\r\n        </div>\r\n    );\r\n}\r\n\r\nconst AddPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field component={textArea} \r\n                name=\"newPostText\" \r\n                placeholder=\"Enter your post here\" \r\n                validate={[required, maxPostLength10]}/>\r\n        </div>\r\n        <div>\r\n            <button>Add post</button>\r\n        </div>\r\n    </form>\r\n    )\r\n}\r\n\r\nconst AddPostReduxForm = reduxForm({form: 'addPost'}) (AddPostForm)\r\n\r\nexport default MyPosts;","import { profileAPI } from \"../api/api\";\r\nimport { stopSubmit } from 'redux-form';\r\n\r\nconst ADD_POST = 's_way_1/pofile/ADD_POST'\r\nconst DELETE_POST = 's_way_1/pofile/DELETE_POST'\r\nconst SET_USER_PROFILE = 's_way_1/pofile/SET_USER_PROFILE'\r\nconst SET_STATUS = 's_way_1/pofile/SET_STATUS'\r\nconst UPLOAD_PHOTO_SUCCESS = 's_way_1/pofile/UPLOAD_PHOTO_SUCCESS'\r\n// const SAVE_PROFILE = 's_way_1/pofile/SAVE_PROFILE'\r\n\r\nlet initialState = {\r\n    posts: [\r\n        { id: 1, message: \"Hi, how are you?\", likesCounts: 15 },\r\n        { id: 2, message: \"It's my first post\", likesCounts: 20 },\r\n        { id: 3, message: \"BlaBla\", likesCounts: 30 },\r\n        { id: 4, message: \"Lala\", likesCounts: 40 }\r\n    ],\r\n    status: null,\r\n    userProfile: null\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, { id: 5, message: action.newPostText, likesCounts: 0 }]\r\n            };\r\n        case DELETE_POST:\r\n            return { ...state, posts: state.posts.filter(p => p.id !== action.postId) }\r\n        case SET_USER_PROFILE:\r\n            return { ...state, userProfile: action.userProfile};\r\n        case SET_STATUS:\r\n            return { ...state, status: action.status }\r\n        case UPLOAD_PHOTO_SUCCESS:\r\n            return { ...state, userProfile: {...state.userProfile, photos: action.photos}}\r\n        // case SAVE_PROFILE:\r\n        //     return { ...state, userProfile: {...state.userProfile, userProfile: action.userProfile}}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPost = (newPostText) =>  ({ type: ADD_POST, newPostText })\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId})\r\nexport const setUserProfile = (userProfile) =>  ({ type: SET_USER_PROFILE, userProfile })\r\nexport const setStatus = (status) =>  ({ type: SET_STATUS, status })\r\nexport const uploadPhotoSuccess = (photos) => ({ type: UPLOAD_PHOTO_SUCCESS, photos})\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    const response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    try {\r\n        const response = await profileAPI.updateStatus(status);\r\n        if (response.data.resultCode === 0)\r\n        {\r\n            dispatch(setStatus(status));\r\n        }\r\n        else\r\n        {\r\n            dispatch(setStatus('Can\\'t load status message from server'));\r\n        }\r\n    }\r\n    catch(error) {\r\n//\r\n    }\r\n}\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    const response = await profileAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const uploadPhoto = (file) => async (dispatch) => {\r\n    const response = await profileAPI.uploadPhoto(file);\r\n    if (response.status === 200)\r\n    {\r\n        dispatch(uploadPhotoSuccess(response.data.data.photos));\r\n    }\r\n}\r\n\r\nexport const saveProfile = (profileData) => async (dispatch, getState) => {\r\n    console.log(profileData)\r\n    const response = await profileAPI.saveProfile(profileData);\r\n    console.log(response)\r\n    if (response.data.resultCode === 0)\r\n    {        \r\n        // dispatch(setUserProfile(profileData)) //My variant\r\n        dispatch(getUserProfile(getState().auth.userId))\r\n    }\r\n    else \r\n    {\r\n        var errors = {};\r\n        response.data.messages.forEach((message) => {\r\n            errors[/(?<=Contacts->)[A-z]+/.exec(message)[0].toLowerCase()] = message;\r\n        })\r\n        response.data.messages && dispatch(stopSubmit(\"editProfile\", {\"contacts\": errors}));\r\n        return Promise.reject();\r\n    };\r\n}\r\n\r\nexport default profileReducer;","import React from 'react';\r\nimport MyPosts from './MyPosts';\r\nimport { addPost } from '../../../redux/profile-reducer';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { withRouter } from 'react-router';\r\n\r\n\r\nclass MyPostsContainer extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <MyPosts {...this.props} isOwner={!this.props.match.params.userId} posts={this.props.posts} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPost(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withRouter\r\n    )\r\n    (MyPostsContainer);","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport s from './ProfileStatus.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n            setStatus(e.currentTarget.value);        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { !editMode && \r\n                <div className={s.statusBlock}>\r\n                    <span className={s.statusMessage} onDoubleClick={ props.isOwner && activateEditMode } >{ props.isOwner ? props.status || 'Set status' : props.status || 'Status was\\'t set'}</span>\r\n                </div>\r\n            }\r\n            { editMode &&\r\n                <div>\r\n                    <input className={s.statusInput} onChange={ onStatusChange } autoFocus={true} onBlur={ deactivateEditMode } value={ status }></input>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport { reduxForm } from 'redux-form';\r\nimport { createField, InputArea } from '../../common/FormsControls/FormsControls';\r\nimport formStyle from '../../common/FormsControls/FormsControl.module.css'\r\n\r\nconst input = InputArea(\"input\");\r\n\r\nconst ProfileDataForm = ({handleSubmit, error, initialValues}) => {\r\n    return (\r\n    <form className={s.descriptionRightColunn} onSubmit={handleSubmit}>\r\n        <div><button className={s.editDescriptionButton}>save</button></div>\r\n        <div className={s.descriptionItem}>\r\n            <b>Fullname: </b> { createField('Full name', 'fullName', [], input) }\r\n        </div>\r\n        <div className={s.descriptionItem}><b>Contacts:</b></div>\r\n        <div className={s.contactsBlock}>{\r\n            Object.entries(initialValues.contacts).map(([k, v]) => <div key={k}>\r\n                <b>{k}</b>: \r\n                { createField(\"\", \"contacts.\" + k, [], input) }\r\n                </div>)\r\n        }</div>\r\n        <div className={s.descriptionItem}>\r\n            <b>Looking for a job:</b>\r\n            { createField(\"\", \"lookingForAJob\", [], input, {type: \"checkbox\"})}\r\n        </div>\r\n        <div className={s.descriptionItem}>\r\n            <b>My professionals skills:</b>\r\n            { createField('My professionals skills', 'lookingForAJobDescription', [], input) }\r\n        </div>\r\n        <div className={s.descriptionItem}><b>About me:</b></div>\r\n        <div className={s.descriptionItem}>\r\n            { createField('About me', 'aboutMe', [], input) }\r\n        </div>\r\n        {error &&\r\n            <div className={formStyle.formSummaryError}>\r\n                {error}\r\n            </div>\r\n        }\r\n    </form>\r\n    )\r\n}\r\n\r\nconst ProfileDataReduxForm = reduxForm({ form: 'editProfile' })(ProfileDataForm)\r\n\r\nexport default ProfileDataReduxForm","import React, { useState } from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport defaultUserPhoto from '../../../assets/images/236832.png';\r\n// import ProfileStatus from './ProfileStatus';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport cn from 'classnames';\r\nimport ProfileDataForm from './ProfileDataForm';\r\n\r\nconst ProfileInfo = ({ isOwner, userProfile, status, updateStatus, uploadPhoto, saveProfile }) => {\r\n    \r\n    let [editMode, setEditMode] = useState(false);\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n    }\r\n    if (!userProfile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            uploadPhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(() => {\r\n            setEditMode(false);\r\n        });\r\n    }\r\n\r\n    const offEditMode = () => {\r\n        setEditMode(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.description}>\r\n                <div className={s.avaBlock}>\r\n                    <div className={s.ava_img}>\r\n                        <img src={userProfile.photos.large || defaultUserPhoto} alt=\"Avatar\"></img>\r\n                        {isOwner && <div>\r\n                            <input className={s.avaInput} id=\"avaFile\" type=\"file\" onChange={onMainPhotoSelected} />\r\n                            <label className={s.avaInputLabel} for=\"avaFile\">Choose a file</label>\r\n                        </div>}\r\n                    </div>\r\n                    <div>\r\n                        <ProfileStatusWithHooks status={status} isOwner={isOwner} updateStatus={updateStatus} />\r\n                    </div>\r\n                </div>\r\n                { editMode \r\n                    ? <ProfileDataForm initialValues={userProfile} onSubmit={onSubmit} offEditMode={offEditMode} /> \r\n                    : <ProfileData\r\n                        className={s.descriptionRightColunn}\r\n                        userProfile={userProfile} \r\n                        isOwner={isOwner}\r\n                        goToEditMode={ () => {setEditMode(true)} } \r\n                        deactivateEditMode={ deactivateEditMode } /> }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst ProfileData = ({userProfile, isOwner, goToEditMode}) => {\r\n    return (\r\n    <div className={s.descriptionRightColunn}>\r\n        {isOwner && <div><button className={s.editDescriptionButton} onClick={goToEditMode}>edit</button></div>}\r\n        <div className={s.descriptionItem}><b>Fullname:</b> {userProfile.fullName}</div>\r\n        <div className={s.descriptionItem}><b>Contacts:</b></div>\r\n        <div className={s.contactsBlock}>{\r\n            Object.entries(userProfile.contacts).map(([k, v]) => v ? <div key={k}><b>{k}</b>: <a className={s.contactLink} target=\"_blank\" href={v}>{v}</a></div> : null)\r\n        }</div>\r\n        <div className={s.descriptionItem}><b>Looking for a job:</b> {userProfile.lookingForAJob ? \"Yes\" : \"No\"}</div>\r\n        {userProfile.lookingForAJob && <div className={s.descriptionItem}><b>My professionals skills:</b> {userProfile.lookingForAJobDescription}</div>}\r\n        <div className={s.descriptionItem}><b>About me:</b></div>\r\n        <div className={s.descriptionItem}>{userProfile.aboutMe}</div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nconst Profile = ({isOwner, userProfile, status, updateStatus, uploadPhoto, saveProfile }) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo isOwner={isOwner} \r\n                            userProfile={userProfile} \r\n                            status={status}\r\n                            saveProfile={saveProfile}\r\n                            updateStatus={updateStatus} \r\n                            uploadPhoto={uploadPhoto} />\r\n            <MyPostsContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { setUserProfile, getUserProfile, getStatus, updateStatus, uploadPhoto, saveProfile } from '../../redux/profile-reducer'\r\nimport { withRouter } from 'react-router';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId || this.props.auth.userId;\r\n\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props}\r\n                isOwner={!this.props.match.params.userId} \r\n                    userProfile={this.props.userProfile}\r\n                    status={this.props.status} \r\n                    updateStatus={this.props.updateStatus}\r\n                    uploadPhoto={this.props.uploadPhoto} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return ({\r\n    userProfile: state.profilePage.userProfile,\r\n    status: state.profilePage.status,\r\n    auth: state.auth\r\n});\r\n}\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { setUserProfile, getUserProfile, getStatus, updateStatus, uploadPhoto, saveProfile }),\r\n    withRouter,\r\n    withAuthRedirect\r\n    )\r\n    (ProfileContainer);","import React from 'react'\r\nimport './Music.module.css'\r\n\r\nconst Music = (props) => {\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Music;","import React from 'react'\r\nimport './Settings.module.css'\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Settings;","import React from 'react';\r\nimport s from './NavMenu.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\n\r\nconst NavMenu = (props) => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/profile\" activeClassName={s.active}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.active}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/users\" activeClassName={s.active}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/news\" activeClassName={s.active}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/music\" activeClassName={s.active}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/settings\" activeClassName={s.active}>Settings</NavLink>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default NavMenu;","import React from 'react';\r\nimport s from './NavFriendsItem.module.css';\r\n\r\nconst NavFriendsItem = (props) => {\r\n    return (\r\n        <div className={s.NavFriendsItem}>\r\n            <img className={s.ava_img} src={props.ava} alt=\"\"/>\r\n            <span className={s.nickname}>{props.nickname}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NavFriendsItem;","import React from 'react';\r\nimport s from './NavFriends.module.css';\r\nimport NavFriendsItem from './NavFriendsItem/NavFriendsItem'; \r\n\r\nconst NavFriends = (props) => {\r\n    \r\n    let NavFriendsElements = props.friends.map(f => (<NavFriendsItem nickname={f.nickname} key={f.id} ava={f.ava} />))\r\n\r\n    return (\r\n        <div>\r\n            <h3>Friends</h3>\r\n            <div className={s.friendsElements}>\r\n                { NavFriendsElements }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NavFriends;","import React from 'react';\r\nimport NavMenu from './NavMenu/NavMenu';\r\nimport NavFriends from './NavFriends/NavFriends';\r\n\r\nconst Navbar = (props) => {\r\n  return (\r\n    props.isAuth &&\r\n    <div>\r\n      <NavMenu />\r\n      <NavFriends friends={props.friends} />\r\n    </div>\r\n  );\r\n\r\n\r\n}\r\n\r\nexport default Navbar;","// import React from 'react';\r\nimport Navbar from './Navbar';\r\nimport {connect} from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    friends: state.navigationData.friends,\r\n    isAuth: state.auth.isAuth\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n\r\n  }\r\n}\r\n\r\nlet NavbarContainer = connect(mapStateToProps, mapDispatchToProps) (Navbar);\r\n\r\nexport default NavbarContainer;","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img src=\"https://www.quizony.com/company-name-generator/imageForSharing.jpg\" alt=\"Company name\"></img>\r\n            <div className={s.loginBlock}>\r\n                {props.isAuth \r\n                ? <div>\r\n                    <div>{props.login} : {props.userId}</div>\r\n                    <button className={s.logoutButton} onClick={props.doLogout}>Log out</button>\r\n                  </div>\r\n                : <NavLink to={'/login'}>Login</NavLink> }\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import { authAPI } from \"../api/api\";\r\nimport { stopSubmit } from 'redux-form';\r\n\r\nconst SET_USER_DATA = 's_way_1/auth/SET_USER_DATA';\r\nconst GET_CAPTCHA_IRL = 's_way_1/auth/GET_CAPTCHA_IRL';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null //if null then captcha is not required\r\n};\r\n\r\nconst authReducer = ( state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n        case SET_USER_DATA:\r\n        case GET_CAPTCHA_IRL:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n                };\r\n        default:\r\n            return state;\r\n        };\r\n};\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth, captchaUrl=null) => ({type: SET_USER_DATA, payload: {userId, email, login, isAuth, captchaUrl}});\r\nexport const getCaptchaUrl = (captchaUrl=null) => ({type: GET_CAPTCHA_IRL, payload: {captchaUrl}});\r\n\r\nexport const getCaptcha = () => async (dispatch) => {\r\n    const response = await authAPI.getCaptcha()\r\n    if (response.data.url) {\r\n        dispatch(getCaptchaUrl(response.data.url));\r\n    }\r\n}\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    const response = await authAPI.authMe()\r\n    if (response.data.resultCode === 0) {\r\n        const {id, login, email} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    };\r\n};\r\n\r\nexport const doLogin = (email, password, rememberMe, captchaString) => async (dispatch) => {\r\n    const response = await authAPI.login(email, password, rememberMe, captchaString)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData());\r\n    }\r\n    else {\r\n        if (response.data.resultCode === 10) {\r\n            dispatch(getCaptcha())\r\n        }\r\n        const message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\"; \r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    };\r\n};\r\n\r\nexport const doLogout = () => async (dispatch) => {\r\n    const response = await authAPI.logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n};\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport {doLogout} from '../../redux/auth-reducer';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\n\r\nclass HeaderContainer extends React.Component {\r\n    \r\n    render() {\r\n        return this.props.isAuth && <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n    userId: state.auth.userId\r\n})\r\nexport default compose(\r\n    connect(mapStateToProps, {doLogout}),\r\n    withAuthRedirect)\r\n     (HeaderContainer);","import React from 'react';\r\nimport s from './Login.module.css';\r\nimport formStyle from '../common/FormsControls/FormsControl.module.css'\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { required } from '../../utils/validators/validators';\r\nimport { InputArea, createField } from '../common/FormsControls/FormsControls';\r\nimport { Redirect } from 'react-router';\r\n\r\nconst input = InputArea(\"input\")\r\n\r\nconst LoginForm = ({ handleSubmit, error, captchaUrl, getCaptcha }) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div className={s.loginArea}>\r\n                <div className={s.loginForm}>\r\n                    {createField(\"Email...\", \"email\", [required], input)}\r\n                    {createField(\"Password...\", \"password\", [required], input, { type: \"password\" })}\r\n                    {/* {createField(null, \"rememberMe\", [], input, { type: \"checkbox\", className: \"sss\"}, \"remember me\")} */}\r\n                    <div className={s.rememberMeArea}>\r\n                    <Field type=\"checkbox\" name=\"rememberMe\" component={input} className={s.rememberMeBox}  />\r\n                    <span className={s.rememberMeText}>remember me</span>\r\n                    </div>\r\n                    {error &&\r\n                        <div className={formStyle.formSummaryError}>\r\n                            {error}\r\n                        </div>\r\n                    }\r\n                    <div>\r\n                        <button>Sign in</button>\r\n                    </div>  \r\n                    {captchaUrl &&\r\n                        <div>\r\n                            <div>\r\n                                <img onClick={getCaptcha} src={captchaUrl} alt=\"CaptchaImg\" />\r\n                            </div>\r\n                            {createField(\"Input captcha data\", \"captchaString\", [], input)}\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div >\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.doLogin(formData.email, formData.password, formData.rememberMe, formData.captchaString)\r\n    }\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n    return <div>\r\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl} getCaptcha={props.getCaptcha} />\r\n    </div>\r\n}\r\n\r\nexport default Login;","import { connect } from 'react-redux';\r\nimport {doLogin, doLogout, getCaptcha} from '../../redux/auth-reducer';\r\nimport Login from './Login';\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    captchaUrl: state.auth.captchaUrl\r\n})\r\n\r\nexport default connect(mapStateToProps, { doLogin, doLogout, getCaptcha })(Login);","import { getAuthUserData } from \"./auth-reducer\";\r\n\r\nconst SET_INITIALIZED = 's_way_1/app/SET_INITIALIZED';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = ( state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n        case SET_INITIALIZED:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n                };\r\n        default:\r\n            return state;\r\n        };\r\n};\r\n\r\nexport const setInitializedSuccess = () => ({type: SET_INITIALIZED});\r\n \r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise]).then(() => { \r\n        dispatch(setInitializedSuccess());\r\n    });\r\n}\r\n\r\nexport default appReducer;","let initialState = {\r\n    friends: [\r\n        {id: 1, nickname: 'Dimon', ava: 'https://www.allremont59.ru/wp-content/uploads/2018/02/anonymity-300x300.jpg'},\r\n        {id: 2, nickname: 'Vasiliy', ava: 'https://www.allremont59.ru/wp-content/uploads/2018/02/anonymity-300x300.jpg'},\r\n        {id: 3, nickname: 'tilipon85',ava: 'https://www.allremont59.ru/wp-content/uploads/2018/02/anonymity-300x300.jpg'},\r\n        {id: 4, nickname: 'tilipon85',ava: 'https://www.allremont59.ru/wp-content/uploads/2018/02/anonymity-300x300.jpg'},\r\n        {id: 5, nickname: 'tilipon85',ava: 'https://www.allremont59.ru/wp-content/uploads/2018/02/anonymity-300x300.jpg'},\r\n        {id: 6, nickname: 'tilipon85',ava: 'https://www.allremont59.ru/wp-content/uploads/2018/02/anonymity-300x300.jpg'},\r\n        {id: 7, nickname: 'tilipon85',ava: 'https://www.allremont59.ru/wp-content/uploads/2018/02/anonymity-300x300.jpg'},\r\n        {id: 8, nickname: 'tilipon85',ava: 'https://www.allremont59.ru/wp-content/uploads/2018/02/anonymity-300x300.jpg'},\r\n    ]\r\n}\r\n\r\nconst navigationReducer =  (state = initialState, action) => state;\r\n\r\nexport default navigationReducer;","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport navigationReducer from \"./navigation-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddlware from 'redux-thunk';\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport appReducer from \"./app-reducer\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer, \r\n    dialogsPage: dialogsReducer, \r\n    navigationData: navigationReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddlware)));\r\n\r\nwindow.__store__ = store;\r\n\r\n\r\nexport default store;","import React, { Suspense } from 'react';\r\nimport Preloader from '../components/common/Preloader/Preloader';\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <Suspense fallback={<Preloader />}>\r\n            <Component />\r\n        </Suspense>\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport News from \"./components/News/News\";\r\nimport ProfileContainer from './components/Profile/ProfileContainer';\r\nimport Music from \"./components/Music/Music\";\r\nimport Settings from \"./components/Settings/Settings\";\r\nimport { Route, withRouter, Switch, Redirect } from \"react-router\";\r\nimport NavbarContainer from \"./components/Navbar/NavbarContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport LoginPage from \"./components/Login/LoginContainer\";\r\nimport { connect, Provider } from \"react-redux\";\r\nimport { initializeApp } from './redux/app-reducer';\r\nimport { getAuthUserData } from './redux/auth-reducer';\r\nimport { compose } from \"redux\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport store from \"./redux/redux-store\";\r\nimport { withSuspense } from \"./hoc/withSuspense\";\r\n\r\n\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\n// const ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\r\n\r\nclass App extends React.Component {\r\n\r\n  catchAllUnhadledErrors = (PromiseRejectionEvent) => {\r\n    alert('Some error occured');\r\n    // console.log(promiseRejectionEvent);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getAuthUserData();\r\n    this.props.initializeApp();\r\n    window.addEventListener('unhandledrejection', this.catchAllUnhadledErrors);\r\n  }\r\n\r\n  componentWillMount() {\r\n    window.removeEventListener('unhandledrejection', this.catchAllUnhadledErrors);\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.initialized) {\r\n      return <Preloader />\r\n    }\r\n    else if (!this.props.isAuth) {\r\n      return <LoginPage />\r\n    }\r\n    else {\r\n      return (\r\n        <div>\r\n          <div className=\"app-wrapper\">\r\n            <HeaderContainer />\r\n            <NavbarContainer />\r\n            <div className=\"app-wrapper-content\">\r\n              <Switch>\r\n                <Route exact path='/' render={() => <Redirect to='/profile' />} />\r\n                <Route path='/profile/:userId?'\r\n                  render={() => <ProfileContainer />} />\r\n                <Route exact path='/dialogs'\r\n                  render={withSuspense(DialogsContainer)} />\r\n                <Route exact path='/news  ' render={() => <News />} />\r\n                <Route exact path='/music' render={() => <Music />} />\r\n                <Route exact path='/users'\r\n                  render={withSuspense(UsersContainer)} />\r\n                <Route exact path='/settings' render={() => <Settings />} />\r\n                <Route render={() => <div>404 NOT FOUND</div>} />\r\n              </Switch>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    };\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  initialized: state.app.initialized,\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nlet AppContainer = compose(\r\n  withRouter,\r\n  connect(mapStateToProps, { initializeApp, getAuthUserData }))(App);\r\n\r\n\r\nlet MainApp = (props) => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Provider store={store}>\r\n        <AppContainer />\r\n      </Provider>\r\n    </BrowserRouter >\r\n  )\r\n}\r\n\r\nexport default MainApp;","import * as serviceWorker from './serviceWorker';\r\n// import store from './redux/redux-store';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n// import App from './App';\r\n// import { BrowserRouter } from \"react-router-dom\";\r\n// import { Provider } from 'react-redux';\r\nimport MainApp from './App';\r\n\r\n// setInterval(() => {\r\n//     store.dispatch({type: \"FAKE\"})\r\n// }, 1000)\r\n\r\nReactDOM.render(\r\n    <MainApp />, document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControl_formControl__1PMmA\",\"error\":\"FormsControl_error__3Zj-b\",\"formSummaryError\":\"FormsControl_formSummaryError__2JJXT\"};","\r\nimport React from 'react';\r\nimport s from './Preloader.module.css';\r\n\r\nlet Preloader = (props) => {\r\n    return <div className={s.preloader}>\r\n        <div className={s.ldsRoller}>\r\n            <div>\r\n            </div>\r\n            <div>\r\n            </div>\r\n            <div>\r\n            </div>\r\n            <div>\r\n            </div>\r\n            <div>\r\n            </div>\r\n            <div>\r\n            </div>\r\n            <div>\r\n            </div>\r\n            <div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","export const required = value => {\r\n        return value ? undefined : `Field is required` \r\n        \r\n}\r\n\r\nexport const maxlength = (maxLengthValue, fieldName='item') => value => {\r\n    return value.length && value.length > maxLengthValue ? `Max length of ${fieldName} is ${maxLengthValue} symbols` : undefined \r\n}\r\n\r\nexport const minLength = (minLengthValue, fieldName='item') => value => {\r\n    return value.length && value.length < minLengthValue ? `Min lenght of ${fieldName} is ${minLengthValue} symbols` : undefined\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginArea\":\"Login_loginArea__2tkpl\",\"loginForm\":\"Login_loginForm__287nU\",\"rememberMeArea\":\"Login_rememberMeArea__RlESh\",\"rememberMeBox\":\"Login_rememberMeBox__2XIkg\",\"rememberMeText\":\"Login_rememberMeText__11tjl\",\"form\":\"Login_form__HzneB\"};","import React from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'} />\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToPropsForRedirect) (RedirectComponent);\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statusBlock\":\"ProfileStatus_statusBlock__2bz9_\",\"statusMessage\":\"ProfileStatus_statusMessage__2ZKTu\",\"statusInput\":\"ProfileStatus_statusInput__-Idqu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavFriendsItem\":\"NavFriendsItem_NavFriendsItem__1Pv9j\",\"ava_img\":\"NavFriendsItem_ava_img__QU4EC\",\"nickname\":\"NavFriendsItem_nickname__1QeKw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__wL-eF\",\"loginBlock\":\"Header_loginBlock__19BMJ\",\"logoutButton\":\"Header_logoutButton__BDQlU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"ProfileInfo_description__3XD5g\",\"contactsBlock\":\"ProfileInfo_contactsBlock__3b1rI\",\"descriptionRightColunn\":\"ProfileInfo_descriptionRightColunn__2tmAT\",\"descriptionItem\":\"ProfileInfo_descriptionItem__1p3AV\",\"editDescriptionButton\":\"ProfileInfo_editDescriptionButton__2Te7C\",\"ava_img\":\"ProfileInfo_ava_img__2C-vk\",\"avaInput\":\"ProfileInfo_avaInput__2voT2\",\"avaBlock\":\"ProfileInfo_avaBlock__124MO\",\"avaInputLabel\":\"ProfileInfo_avaInputLabel__2uA6c\",\"contactLink\":\"ProfileInfo_contactLink__3AULy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts_block\":\"MyPosts_posts_block__3l3wg\",\"posts\":\"MyPosts_posts__386k2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__3axXf\",\"ldsRoller\":\"Preloader_ldsRoller__3K6GI\"};"],"sourceRoot":""}