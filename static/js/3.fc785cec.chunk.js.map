{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","assets/images/236832.png","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","Post","props","className","s","item","src","alt","message","likesCounts","maxPostLength10","maxlength","textArea","InputArea","AddPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","name","placeholder","validate","required","MyPosts","console","log","postsElements","posts","map","p","key","id","isOwner","posts_block","values","addPost","newPostText","MyPostsContainer","this","match","params","userId","React","Component","compose","connect","state","profilePage","dispatch","withRouter","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","autoFocus","onBlur","updateStatus","ProfileInfo","userProfile","uploadPhoto","Preloader","description_block","ava_img","photos","large","defaultUserPhoto","type","target","files","fullName","aboutMe","entries","contacts","k","v","Profile","ProfileContainer","auth","getUserProfile","getStatus","refreshProfile","prevProps","setUserProfile","withAuthRedirect"],"mappings":"sJAIe,SAASA,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,oBILtGC,EAAOC,QAAU,IAA0B,oC,oBCC3CD,EAAOC,QAAU,CAAC,YAAc,6BAA6B,MAAQ,yB,oBCArED,EAAOC,QAAU,CAAC,KAAO,qB,oBCAzBD,EAAOC,QAAU,CAAC,YAAc,iCAAiC,kBAAoB,uCAAuC,QAAU,+B,gICiBvHC,EAdF,SAACC,GAEV,OACI,yBAAKC,UAAWC,IAAEC,MACd,yBAAKC,IAAI,mDAAmDC,IAAI,WAC9DL,EAAMM,QACR,6BACI,wCACEN,EAAMO,e,iCCLlBC,EAAkBC,YAAU,GAAI,QAChCC,EAAWC,YAAU,YAoCrBC,EAAmBC,YAAU,CAACC,KAAM,WAAjBD,EAhBL,SAACb,GACjB,OACI,0BAAMe,SAAUf,EAAMgB,cACtB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWR,EACdS,KAAK,cACLC,YAAY,uBACZC,SAAU,CAACC,IAAUd,MAE7B,6BACI,iDAQGe,EApCC,SAAAvB,GACZwB,QAAQC,IAAI,kBACZ,IAAIC,EAAgB1B,EAAM2B,MAAMC,KAAK,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAMvB,QAASuB,EAAEvB,QAASwB,IAAKD,EAAEE,GAAIxB,YAAasB,EAAEtB,iBAI9F,OACIP,EAAMgC,SACN,yBAAK/B,UAAWC,IAAE+B,aACd,wCACA,kBAACrB,EAAD,CAAkBG,SAPZ,SAACmB,GACXlC,EAAMmC,QAAQD,EAAOE,gBAOjB,yBAAKnC,UAAWC,IAAEyB,OACZD,K,+BCdZW,E,uKAEE,OACI,6BACI,kBAAC,EAAD,iBAAaC,KAAKtC,MAAlB,CAAyBgC,SAAUM,KAAKtC,MAAMuC,MAAMC,OAAOC,OAAQd,MAAOW,KAAKtC,MAAM2B,c,GAJtEe,IAAMC,WAwBtBC,cACXC,aAfkB,SAACC,GACnB,MAAO,CACHnB,MAAOmB,EAAMC,YAAYpB,UAIR,SAACqB,GACtB,MAAO,CACHb,QAAS,SAACC,GACNY,EAASb,YAAQC,SAOzBa,IAFWL,CAIVP,G,qDCMUa,EArCgB,SAAClD,GAAW,IAAD,EACRmD,oBAAS,GADD,mBACjCC,EADiC,KACvBC,EADuB,OAEZF,mBAASnD,EAAMsD,QAFH,mBAEjCA,EAFiC,KAEzBC,EAFyB,KAItCC,qBAAW,WACPD,EAAUvD,EAAMsD,UACjB,CAACtD,EAAMsD,SAeV,OACI,8BACOF,GACC,6BACI,0BAAMK,cAjBG,WACrBJ,GAAY,KAgB2CrD,EAAMsD,QAAU,sGAGjEF,GACE,6BACI,2BAAOM,SAbA,SAACC,GAChBJ,EAAUI,EAAEC,cAAcpE,QAYiBqE,WAAW,EAAMC,OAlBzC,WACvBT,GAAY,GACZrD,EAAM+D,aAAaT,IAgB2E9D,MAAQ8D,OCY/FU,EAxCK,SAAC,GAAiE,IAA/DhC,EAA8D,EAA9DA,QAASiC,EAAqD,EAArDA,YAAaX,EAAwC,EAAxCA,OAAQS,EAAgC,EAAhCA,aAAcG,EAAkB,EAAlBA,YAC/D,IAAKD,EACD,OAAO,kBAACE,EAAA,EAAD,MAUX,OACI,6BAII,yBAAKlE,UAAWC,IAAEkE,mBACd,yBAAKnE,UAAWC,IAAEmE,SACd,yBAAKjE,IAAK6D,EAAYK,OAAOC,OAASC,IAAkBnE,IAAI,WAC3D2B,GAAW,6BACR,2BAAOyC,KAAK,OAAOf,SAhBX,SAACC,GACrBA,EAAEe,OAAOC,MAAMlF,QAEfyE,EAAYP,EAAEe,OAAOC,MAAM,QAenB,kBAAC,EAAD,CAAwBrB,OAAQA,EAAQS,aAAcA,IACtD,6BAAM,OAASE,EAAYxB,SAE/B,6BACI,yFAAkBwB,EAAYW,UAC9B,uEACA,6BAAMX,EAAYY,SAClB,kFAEIhG,OAAOiG,QAAQb,EAAYc,UAAUnD,KAAI,mCAAEoD,EAAF,KAAKC,EAAL,YAAYA,EAAI,6BAAMD,EAAN,KAAWC,GAAU,YCpBvFC,EAfC,SAAC,GAAgE,IAA/DlD,EAA8D,EAA9DA,QAASiC,EAAqD,EAArDA,YAAaX,EAAwC,EAAxCA,OAAQS,EAAgC,EAAhCA,aAAcG,EAAkB,EAAlBA,YAC1D,OACI,6BACI,kBAAC,EAAD,CAAalC,QAASA,EACNiC,YAAaA,EACbX,OAAQA,EACRS,aAAcA,EACdG,YAAaA,IAC7B,kBAAC,EAAD,Q,QCJNiB,E,+KAGE,IAAI1C,EAASH,KAAKtC,MAAMuC,MAAMC,OAAOC,QAAUH,KAAKtC,MAAMoF,KAAK3C,OAE/DH,KAAKtC,MAAMqF,eAAe5C,GAC1BH,KAAKtC,MAAMsF,UAAU7C,K,0CAIrBH,KAAKiD,mB,yCAGUC,GACXlD,KAAKtC,MAAMuC,MAAMC,OAAOC,SAAW+C,EAAUjD,MAAMC,OAAOC,QAC1DH,KAAKiD,mB,+BAKT,OACI,6BACI,kBAAC,EAAD,iBAAajD,KAAKtC,MAAlB,CACAgC,SAAUM,KAAKtC,MAAMuC,MAAMC,OAAOC,OAC9BwB,YAAa3B,KAAKtC,MAAMiE,YACxBX,OAAQhB,KAAKtC,MAAMsD,OACnBS,aAAczB,KAAKtC,MAAM+D,aACzBG,YAAa5B,KAAKtC,MAAMkE,oB,GA3BbxB,IAAMC,WA2CtBC,sBACXC,aAXkB,SAACC,GACnB,MAAQ,CACRmB,YAAanB,EAAMC,YAAYkB,YAC/BX,OAAQR,EAAMC,YAAYO,OAC1B8B,KAAMtC,EAAMsC,QAOa,CAAEK,mBAAgBJ,mBAAgBC,cAAWvB,iBAAcG,kBACpFjB,IACAyC,IAHW9C,CAKVuC","file":"static/js/3.fc785cec.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","module.exports = __webpack_public_path__ + \"static/media/236832.f07d66e0.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts_block\":\"MyPosts_posts_block__2GGJ_\",\"posts\":\"MyPosts_posts__JwA03\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3fCAw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile_img\":\"ProfileInfo_profile_img__2ZBvg\",\"description_block\":\"ProfileInfo_description_block__3tGQQ\",\"ava_img\":\"ProfileInfo_ava_img__9qIf7\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\n\r\nconst Post = (props) => {\r\n\r\n    return (\r\n        <div className={s.item}>\r\n            <img src=\"https://avatarko.ru/img/kartinka/2/Gubka_Bob.jpg\" alt=\"Avatar\" />\r\n            { props.message }\r\n            <div>\r\n                <span>likes </span>\r\n                { props.likesCounts }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {reduxForm, Field } from 'redux-form';\r\nimport { required, maxlength } from '../../../utils/validators/validators';\r\nimport { InputArea } from '../../common/FormsControls/FormsControls';\r\n\r\nconst maxPostLength10 = maxlength(10, 'post');\r\nconst textArea = InputArea(\"textarea\")\r\n\r\nconst MyPosts = props => {\r\n    console.log('render MyPosts')\r\n    let postsElements = props.posts.map( p => <Post message={p.message} key={p.id} likesCounts={p.likesCounts}/>);\r\n    let addPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    };\r\n    return (\r\n        props.isOwner &&\r\n        <div className={s.posts_block}>\r\n            <h3>My posts</h3>\r\n            <AddPostReduxForm onSubmit={addPost}/>\r\n            <div className={s.posts}>\r\n                { postsElements }\r\n            </div >\r\n        </div>\r\n    );\r\n}\r\n\r\nconst AddPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field component={textArea} \r\n                name=\"newPostText\" \r\n                placeholder=\"Enter your post here\" \r\n                validate={[required, maxPostLength10]}/>\r\n        </div>\r\n        <div>\r\n            <button>Add post</button>\r\n        </div>\r\n    </form>\r\n    )\r\n}\r\n\r\nconst AddPostReduxForm = reduxForm({form: 'addPost'}) (AddPostForm)\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport MyPosts from './MyPosts';\r\nimport { addPost } from '../../../redux/profile-reducer';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { withRouter } from 'react-router';\r\n\r\n\r\nclass MyPostsContainer extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <MyPosts {...this.props} isOwner={!this.props.match.params.userId} posts={this.props.posts} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPost(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withRouter\r\n    )\r\n    (MyPostsContainer);","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\n// import s from './ProfileStatus.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n            setStatus(e.currentTarget.value);        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { !editMode && \r\n                <div>\r\n                    <span onDoubleClick={ activateEditMode } >{props.status || 'Установить статус'}</span>\r\n                </div>\r\n            }\r\n            { editMode &&\r\n                <div>\r\n                    <input onChange={ onStatusChange } autoFocus={true} onBlur={ deactivateEditMode } value={ status }></input>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport defaultUserPhoto from '../../../assets/images/236832.png';\r\n// import ProfileStatus from './ProfileStatus';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = ({ isOwner, userProfile, status, updateStatus, uploadPhoto }) => {\r\n    if (!userProfile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length)\r\n        {\r\n            uploadPhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* <div className={s.profile_img}>\r\n                <img src=\"https://wallpaperaccess.com/full/121194.jpg\" alt=\"Profile\"></img>\r\n            </div> */}\r\n            <div className={s.description_block}>\r\n                <div className={s.ava_img}>\r\n                    <img src={userProfile.photos.large || defaultUserPhoto} alt=\"Avatar\"></img>\r\n                    {isOwner && <div>\r\n                        <input type=\"file\" onChange={onMainPhotoSelected} />\r\n                    </div>}\r\n                    <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n                    <div>{'ID: ' + userProfile.userId}</div>\r\n                </div>\r\n                <div>\r\n                    <div>Полное имя: {userProfile.fullName}</div>\r\n                    <div>Обо мне:</div>\r\n                    <div>{userProfile.aboutMe}</div>\r\n                    <div>Контакты:</div>\r\n                    { \r\n                        Object.entries(userProfile.contacts).map(([k, v]) => v ? <div>{k}: {v}</div>: null) \r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nconst Profile = ({isOwner, userProfile, status, updateStatus, uploadPhoto }) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo isOwner={isOwner} \r\n                            userProfile={userProfile} \r\n                            status={status} \r\n                            updateStatus={updateStatus} \r\n                            uploadPhoto={uploadPhoto} />\r\n            <MyPostsContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { setUserProfile, getUserProfile, getStatus, updateStatus, uploadPhoto } from '../../redux/profile-reducer'\r\nimport { withRouter } from 'react-router';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId || this.props.auth.userId;\r\n\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props}\r\n                isOwner={!this.props.match.params.userId} \r\n                    userProfile={this.props.userProfile}\r\n                    status={this.props.status} \r\n                    updateStatus={this.props.updateStatus}\r\n                    uploadPhoto={this.props.uploadPhoto} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return ({\r\n    userProfile: state.profilePage.userProfile,\r\n    status: state.profilePage.status,\r\n    auth: state.auth\r\n});\r\n}\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { setUserProfile, getUserProfile, getStatus, updateStatus, uploadPhoto }),\r\n    withRouter,\r\n    withAuthRedirect\r\n    )\r\n    (ProfileContainer);"],"sourceRoot":""}