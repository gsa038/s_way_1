{"version":3,"sources":["redux/dialogs-reducer.js","redux/users-reducer.js","components/Navbar/NavMenu/NavMenu.module.css","components/Navbar/NavFriends/NavFriends.module.css","components/common/Preloader/Preloader.module.css","api/api.js","serviceWorker.js","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/Navbar/NavMenu/NavMenu.jsx","components/Navbar/NavFriends/NavFriendsItem/NavFriendsItem.jsx","components/Navbar/NavFriends/NavFriends.jsx","components/Navbar/Navbar.jsx","components/Navbar/NavbarContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","components/Login/LoginContainer.jsx","redux/app-reducer.js","redux/navigation-reducer.js","redux/redux-store.js","hoc/withSuspense.js","App.jsx","index.js","components/Login/Login.module.css","components/common/FormsControls/FormsControls.jsx","components/common/FormsControls/FormsControl.module.css","components/common/Preloader/Preloader.jsx","components/Navbar/NavFriends/NavFriendsItem/NavFriendsItem.module.css","utils/validators/validators.js","components/Header/Header.module.css","hoc/withAuthRedirect.js","redux/profile-reducer.js"],"names":["SEND_MESSAGE","initialState","dialogs","id","name","messages","message","dialogId","isMyMessage","sendMessage","newMessageText","type","dialogsReducer","state","action","TOGGLE_FOLLOW","SET_USERS","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","toggleFollow","userId","toggleIsFetching","toggleFollowingProgress","getUsers","page","dispatch","a","usersAPI","data","items","totalCount","follow","resultCode","usersReducer","map","u","followed","filter","module","exports","instance","axios","withCredentials","baseURL","headers","get","then","response","post","delete","getProfile","console","warn","profileAPI","authAPI","authMe","login","email","password","rememberMe","captchaString","captcha","logout","getCaptcha","getStatus","updateStatus","status","put","uploadPhoto","photo","formData","FormData","append","saveProfile","profileData","Boolean","window","location","hostname","match","News","props","Music","Settings","NavMenu","className","s","nav","item","active","to","activeClassName","NavFriendsItem","ava_img","src","ava","alt","nickname","NavFriends","NavFriendsElements","friends","f","key","friendsElements","Navbar","isAuth","NavbarContainer","connect","navigationData","auth","Header","header","loginBlock","onClick","doLogout","SET_USER_DATA","SET_CAPTCHA_IRL","captchaUrl","setAuthUserData","payload","setCaptchaUrl","getAuthUserData","authReducer","HeaderContainer","this","React","Component","compose","withAuthRedirect","input","InputArea","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","loginPage","loginForm","createField","required","rememberMeArea","Field","component","rememberMeBox","rememberMeText","formStyle","formSummaryError","Login","doLogin","url","length","stopSubmit","_error","initialized","appReducer","navigationReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","usersPage","app","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddlware","__store__","withSuspense","fallback","Preloader","DialogsContainer","lazy","ProfileContainer","UsersContainer","App","initializeApp","path","render","AppContainer","withRouter","promise","Promise","all","MainApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","InputType","meta","touched","hasError","styles","formControl","placeholder","validators","text","validate","preloader","width","height","stroke","value","undefined","maxlength","maxLengthValue","fieldName","mapStateToPropsForRedirect","RedirectComponent","ADD_POST","DELETE_POST","SET_STATUS","posts","likesCounts","userProfile","addPost","newPostText","setUserProfile","setStatus","getUserProfile","file","photos","getState","p","postId"],"mappings":"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","file":"static/js/main.9ef07be5.chunk.js","sourcesContent":["const SEND_MESSAGE = 's_way_1/dialogs/SEND-MESSAGE'\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        { id: 1, name: \"Helen\" },\r\n        { id: 2, name: \"Alex\" },\r\n        { id: 3, name: \"Andrey\" },\r\n        { id: 4, name: \"Ivan\" }\r\n    ],\r\n    messages: [\r\n        { id: 1, message: \"Hi\", dialogId: 2, isMyMessage: true },\r\n        { id: 2, message: \"How is your name?\", dialogId: 2, isMyMessage: true },\r\n        { id: 3, message: \"My name is ...\", dialogId: 2, isMyMessage: false },\r\n        { id: 4, message: \"Yet another message\", dialogId: 2, isMyMessage: true },\r\n        { id: 5, message: \"Yet another message\", dialogId: 2, isMyMessage: false }\r\n    ]\r\n}\r\n\r\nconst dialogsReducer =  (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SEND_MESSAGE:\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, { id: 6, message: action.newMessageText, dialogId: 2, isMyMessage: true } ]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessage = (newMessageText) => ({ type: SEND_MESSAGE, newMessageText })\r\n\r\nexport default dialogsReducer;","import {usersAPI} from '../api/api';\r\n\r\nconst TOGGLE_FOLLOW = 's_way_1/users/TOGGLE_FOLLOW'\r\nconst SET_USERS = 's_way_1/users/SET_USERS'\r\nconst SET_CURRENT_PAGE = 's_way_1/users/SET_CURRENT_PAGE'\r\nconst SET_TOTAL_COUNT = 's_way_1/users/SET_TOTAL_COUNT'\r\nconst TOGGLE_IS_FETCHING = 's_way_1/users/TOGGLE_IS_FETCHING'\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 's_way_1/users/TOGGLE_IS_FOLLOWING_PROGRESS'\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 100,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n}\r\n\r\nconst usersReducer = ( state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n        case TOGGLE_FOLLOW:\r\n            return {\r\n                ...state,\r\n                // NOT WORK with updateObjectInArray from objects-helper.js // 90-redux-ducks video\r\n                // users: updateObjectInArray(state.users, action.userId, 'id', !state.users[action.userId].followed)\r\n                users: state.users.map( u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: !u.followed}\r\n                    }\r\n                return u;\r\n                })            \r\n            }\r\n        case SET_USERS: {\r\n            return { ...state, users: action.users }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return { ...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_COUNT: {\r\n            return { ...state, totalUsersCount: action.totalUsersCount}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return { ...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return { ...state, \r\n                followingInProgress: action.followingInProgress \r\n                ? [...state.followingInProgress, action.userId]\r\n                : [state.followingInProgress.filter(id => id !== action.userId)]}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const toggleFollow = (userId) => ({type: TOGGLE_FOLLOW, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_COUNT, totalUsersCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingProgress = (followingInProgress, userId) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, followingInProgress, userId})\r\n\r\nexport const getUsers = (page, pageSize) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    dispatch(setCurrentPage(page));\r\n\r\n    let data = await usersAPI.getUsers(page, pageSize);\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setUsers(data.items));\r\n    dispatch(setTotalUsersCount(data.totalCount));\r\n}\r\n\r\nexport const follow = (follow, userId) => async (dispatch) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let data = await usersAPI.follow(follow, userId);\r\n    if (data.resultCode === 0 || 1) {\r\n        dispatch(toggleFollow(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport default usersReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"NavMenu_nav__3p8TW\",\"item\":\"NavMenu_item__3hfDF\",\"active\":\"NavMenu_active__1OZW2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendsElements\":\"NavFriends_friendsElements__1xggS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__3axXf\"};","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"40a499b6-4421-4c8e-b336-09492ab319c5\"\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n\r\n    getUsers(currentPage, pageSize) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n        .then(response => response.data)\r\n    },\r\n    follow(follow, userId) {\r\n        return (follow ? instance.post(`follow/${userId}`) : instance.delete(`follow/${userId}`))\r\n            .then(response => response.data)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn(\"Obsolete method. Please use ProfileAPI object for getProfile\")\r\n        return profileAPI.getProfile(userId)\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n\r\n    authMe() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe=false, captchaString) {\r\n        return instance.post('/auth/login', {email: email, password: password, rememberMe: rememberMe, captcha: captchaString});\r\n    },\r\n    logout() {\r\n        return instance.delete('/auth/login');\r\n    },\r\n    getCaptcha() {\r\n        return instance.get('/security/get-captcha-url')\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get('profile/status/' + userId)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put('profile/status/', {status: status});\r\n    },\r\n    uploadPhoto(photo) {\r\n        const formData = new FormData();\r\n        formData.append('image', photo);\r\n        return instance.put('profile/photo/', formData, {\r\n            'Content-Type': 'multipath/form-data'\r\n        })\r\n    },\r\n    saveProfile(profileData) {\r\n        return instance.put('profile', profileData );\r\n    }\r\n\r\n}\r\n\r\nexport default null;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport './News.module.css'\r\n\r\nconst News = (props) => {\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default News;","import React from 'react'\r\nimport './Music.module.css'\r\n\r\nconst Music = (props) => {\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Music;","import React from 'react'\r\nimport './Settings.module.css'\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Settings;","import React from 'react';\r\nimport s from './NavMenu.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\n\r\nconst NavMenu = (props) => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/profile\" activeClassName={s.active}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.active}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/users\" activeClassName={s.active}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/news\" activeClassName={s.active}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/music\" activeClassName={s.active}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/settings\" activeClassName={s.active}>Settings</NavLink>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default NavMenu;","import React from 'react';\r\nimport s from './NavFriendsItem.module.css';\r\n\r\nconst NavFriendsItem = (props) => {\r\n    return (\r\n        <div className={s.NavFriendsItem}>\r\n            <img className={s.ava_img} src={props.ava} alt=\"\"/>\r\n            <span className={s.nickname}>{props.nickname}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NavFriendsItem;","import React from 'react';\r\nimport s from './NavFriends.module.css';\r\nimport NavFriendsItem from './NavFriendsItem/NavFriendsItem'; \r\n\r\nconst NavFriends = (props) => {\r\n    \r\n    let NavFriendsElements = props.friends.map(f => (<NavFriendsItem nickname={f.nickname} key={f.id} ava={f.ava} />))\r\n\r\n    return (\r\n        <div>\r\n            <h3>Friends</h3>\r\n            <div className={s.friendsElements}>\r\n                { NavFriendsElements }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NavFriends;","import React from 'react';\r\nimport NavMenu from './NavMenu/NavMenu';\r\nimport NavFriends from './NavFriends/NavFriends';\r\n\r\nconst Navbar = (props) => {\r\n  return (\r\n    props.isAuth &&\r\n    <div>\r\n      <NavMenu />\r\n      <NavFriends friends={props.friends} />\r\n    </div>\r\n  );\r\n\r\n\r\n}\r\n\r\nexport default Navbar;","// import React from 'react';\r\nimport Navbar from './Navbar';\r\nimport {connect} from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    friends: state.navigationData.friends,\r\n    isAuth: state.auth.isAuth\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n\r\n  }\r\n}\r\n\r\nlet NavbarContainer = connect(mapStateToProps, mapDispatchToProps) (Navbar);\r\n\r\nexport default NavbarContainer;","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img src=\"https://www.quizony.com/company-name-generator/imageForSharing.jpg\" alt=\"Company name\"></img>\r\n            <div className={s.loginBlock}>\r\n                {props.isAuth \r\n                ? <div>\r\n                    <div>{props.login} : {props.userId}</div>\r\n                    <button onClick={props.doLogout}>Log out</button>\r\n                  </div>\r\n                : <NavLink to={'/login'}>Login</NavLink> }\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import { authAPI } from \"../api/api\";\r\nimport { stopSubmit } from 'redux-form';\r\n\r\nconst SET_USER_DATA = 's_way_1/auth/SET_USER_DATA';\r\nconst SET_CAPTCHA_IRL = 's_way_1/auth/SET_CAPTCHA_IRL';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null\r\n};\r\n\r\nconst authReducer = ( state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n                };\r\n        case SET_CAPTCHA_IRL:\r\n            return {\r\n                ...state,\r\n                captchaUrl: action.captchaUrl\r\n                };\r\n        default:\r\n            return state;\r\n        };\r\n};\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth, captchaUrl=null) => ({type: SET_USER_DATA, payload: {userId, email, login, isAuth, captchaUrl}});\r\nexport const setCaptchaUrl = (captchaUrl=null) => ({type: SET_CAPTCHA_IRL, captchaUrl})\r\n\r\nexport const getCaptcha = () => async (dispatch) => {\r\n    let response = await authAPI.getCaptcha()\r\n    if (response.data.url) {\r\n        dispatch(setCaptchaUrl(response.data.url));\r\n    }\r\n}\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.authMe()\r\n    if (response.data.resultCode === 0) {\r\n        let {id, login, email} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    };\r\n};\r\n\r\nexport const doLogin = (email, password, rememberMe, captchaString) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe, captchaString)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData());\r\n    }\r\n    else {\r\n        if (response.data.resultCode === 10) {\r\n            dispatch(getCaptcha())\r\n        }\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\"; \r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    };\r\n};\r\n\r\nexport const doLogout = () => async (dispatch) => {\r\n    let response = await authAPI.logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n};\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport {doLogout} from '../../redux/auth-reducer';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\n\r\nclass HeaderContainer extends React.Component {\r\n    \r\n    render() {\r\n        return this.props.isAuth && <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n    userId: state.auth.userId\r\n})\r\nexport default compose(\r\n    connect(mapStateToProps, {doLogout}),\r\n    withAuthRedirect)\r\n     (HeaderContainer);","import React from 'react';\r\nimport s from './Login.module.css';\r\nimport formStyle from '../common/FormsControls/FormsControl.module.css'\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { required } from '../../utils/validators/validators';\r\nimport { InputArea, createField } from '../common/FormsControls/FormsControls';\r\nimport { Redirect } from 'react-router';\r\n\r\nconst input = InputArea(\"input\")\r\n\r\nconst LoginForm = ({ handleSubmit, error, captchaUrl }) => {\r\n    return (\r\n        <form className={s.login} onSubmit={handleSubmit}>\r\n            <div className={s.loginPage}>\r\n                <div className={s.loginForm}>\r\n                    {createField(\"Email...\", \"email\", [required], input)}\r\n                    {createField(\"Password...\", \"password\", [required], input, { type: \"password\" })}\r\n                    {/* {createField(null, \"rememberMe\", [], input, { type: \"checkbox\", className: \"sss\"}, \"remember me\")} */}\r\n                    <div className={s.rememberMeArea}>\r\n                    <Field type=\"checkbox\" name=\"rememberMe\" component={input} className={s.rememberMeBox}  />\r\n                    <span className={s.rememberMeText}>remember me</span>\r\n                    </div>\r\n                    {error &&\r\n                        <div className={formStyle.formSummaryError}>\r\n                            {error}\r\n                        </div>\r\n                    }\r\n                    <div>\r\n                        <button>Sign in</button>\r\n                    </div>  \r\n                    {captchaUrl &&\r\n                        <div>\r\n                            <div>\r\n                                <img src={captchaUrl} alt=\"CaptchaImg\" />\r\n                            </div>\r\n                            {createField(\"Input captcha data\", \"captchaString\", [], input)}\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div >\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.doLogin(formData.email, formData.password, formData.rememberMe, formData.captchaString)\r\n    }\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n    return <div>\r\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl} />\r\n    </div>\r\n}\r\n\r\nexport default Login;","import { connect } from 'react-redux';\r\nimport {doLogin, doLogout} from '../../redux/auth-reducer';\r\nimport Login from './Login';\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    captchaUrl: state.auth.captchaUrl\r\n})\r\n\r\nexport default connect(mapStateToProps, { doLogin, doLogout }) (Login);","import { getAuthUserData } from \"./auth-reducer\";\r\n\r\nconst SET_INITIALIZED = 's_way_1/app/SET_INITIALIZED';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = ( state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n        case SET_INITIALIZED:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n                };\r\n        default:\r\n            return state;\r\n        };\r\n};\r\n\r\nexport const setInitializedSuccess = () => ({type: SET_INITIALIZED});\r\n \r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise]).then(() => { \r\n        dispatch(setInitializedSuccess());\r\n    });\r\n}\r\n\r\nexport default appReducer;","let initialState = {\r\n    friends: [\r\n        {id: 1, nickname: 'Dimon', ava: 'https://www.allremont59.ru/wp-content/uploads/2018/02/anonymity-300x300.jpg'},\r\n        {id: 2, nickname: 'Vasiliy', ava: 'https://www.allremont59.ru/wp-content/uploads/2018/02/anonymity-300x300.jpg'},\r\n        {id: 3, nickname: 'tilipon85',ava: 'https://www.allremont59.ru/wp-content/uploads/2018/02/anonymity-300x300.jpg'},\r\n        {id: 4, nickname: 'tilipon85',ava: 'https://www.allremont59.ru/wp-content/uploads/2018/02/anonymity-300x300.jpg'},\r\n        {id: 5, nickname: 'tilipon85',ava: 'https://www.allremont59.ru/wp-content/uploads/2018/02/anonymity-300x300.jpg'},\r\n        {id: 6, nickname: 'tilipon85',ava: 'https://www.allremont59.ru/wp-content/uploads/2018/02/anonymity-300x300.jpg'},\r\n        {id: 7, nickname: 'tilipon85',ava: 'https://www.allremont59.ru/wp-content/uploads/2018/02/anonymity-300x300.jpg'},\r\n        {id: 8, nickname: 'tilipon85',ava: 'https://www.allremont59.ru/wp-content/uploads/2018/02/anonymity-300x300.jpg'},\r\n    ]\r\n}\r\n\r\nconst navigationReducer =  (state = initialState, action) => state;\r\n\r\nexport default navigationReducer;","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport navigationReducer from \"./navigation-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddlware from 'redux-thunk';\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport appReducer from \"./app-reducer\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer, \r\n    dialogsPage: dialogsReducer, \r\n    navigationData: navigationReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddlware)));\r\n\r\nwindow.__store__ = store;\r\n\r\n\r\nexport default store;","import React, { Suspense } from 'react';\r\nimport Preloader from '../components/common/Preloader/Preloader';\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <Suspense fallback={<Preloader />}>\r\n            <Component />\r\n        </Suspense>\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport News from \"./components/News/News\";\r\nimport Music from \"./components/Music/Music\";\r\nimport Settings from \"./components/Settings/Settings\";\r\nimport { Route, withRouter } from \"react-router\";\r\nimport NavbarContainer from \"./components/Navbar/NavbarContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport LoginPage from \"./components/Login/LoginContainer\";\r\nimport { connect, Provider } from \"react-redux\";\r\nimport { initializeApp } from './redux/app-reducer';\r\nimport { compose } from \"redux\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport store from \"./redux/redux-store\";\r\nimport { withSuspense } from \"./hoc/withSuspense\";\r\n\r\n\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\r\n\r\nclass App extends React.Component {\r\n\r\n  componentDidMount() {\r\n    this.props.initializeApp();\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.initialized) {\r\n      return <Preloader />\r\n    }\r\n    else {\r\n      return (\r\n        <div>\r\n          <Route path='/login' render={() => <LoginPage />} />\r\n          <div className=\"app-wrapper\">\r\n            <HeaderContainer />\r\n            <NavbarContainer />\r\n            <div className=\"app-wrapper-content\">\r\n              <Route path='/profile/:userId?' \r\n                      render={withSuspense(ProfileContainer)} />\r\n              <Route path='/dialogs' \r\n                      render={withSuspense(DialogsContainer)} />\r\n              <Route path='/news  ' render={() => <News />} />\r\n              <Route path='/music' render={() => <Music />} />\r\n              <Route path='/users' \r\n                      render={withSuspense(UsersContainer)} />\r\n              <Route path='/settings' render={() => <Settings />} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    };\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  initialized: state.app.initialized\r\n})\r\n\r\nlet AppContainer = compose(\r\n  withRouter,\r\n  connect(mapStateToProps, { initializeApp }))(App);\r\n\r\n\r\nlet MainApp = (props) => {\r\n  return (\r\n  <HashRouter>\r\n    <Provider store={store}>\r\n      <AppContainer />\r\n    </Provider>\r\n  </HashRouter >\r\n)}\r\n\r\nexport default MainApp;","import * as serviceWorker from './serviceWorker';\r\n// import store from './redux/redux-store';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n// import App from './App';\r\n// import { BrowserRouter } from \"react-router-dom\";\r\n// import { Provider } from 'react-redux';\r\nimport MainApp from './App';\r\n\r\n// setInterval(() => {\r\n//     store.dispatch({type: \"FAKE\"})\r\n// }, 1000)\r\n\r\nReactDOM.render(\r\n    <MainApp />, document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginPage\":\"Login_loginPage__3j0Ii\",\"loginForm\":\"Login_loginForm__287nU\",\"rememberMeArea\":\"Login_rememberMeArea__RlESh\",\"rememberMeBox\":\"Login_rememberMeBox__2XIkg\",\"rememberMeText\":\"Login_rememberMeText__11tjl\",\"form\":\"Login_form__HzneB\"};","import React from 'react';\r\nimport styles from './FormsControl.module.css';\r\nimport { Field } from 'redux-form';\r\n\r\n\r\nexport const InputArea = InputType => ({input, meta: {touched, error}, ...props}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                <InputType {...input} {...props}/>\r\n            </div>\r\n            { hasError && <span>{error}</span> }\r\n        </div>   \r\n    )    \r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => {\r\n    return (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name} component={component} validate={validators} {...props}  /> {text}\r\n    </div>\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControl_formControl__1PMmA\",\"error\":\"FormsControl_error__3Zj-b\",\"formSummaryError\":\"FormsControl_formSummaryError__2JJXT\"};","\r\nimport React from 'react';\r\nimport s from './Preloader.module.css';\r\nimport * as SVGLoaders from 'svg-loaders-react';\r\n\r\nlet Preloader = (props) => {\r\n    return <div className={s.preloader}>\r\n        <SVGLoaders.TailSpin width='72' height='72' stroke=\"black\" />\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavFriendsItem\":\"NavFriendsItem_NavFriendsItem__1Pv9j\",\"ava_img\":\"NavFriendsItem_ava_img__QU4EC\",\"nickname\":\"NavFriendsItem_nickname__1QeKw\"};","export const required = value => {\r\n        return value ? undefined : `Field is required` \r\n        \r\n}\r\n\r\nexport const maxlength = (maxLengthValue, fieldName='item') => value => {\r\n    return value.length && value.length > maxLengthValue ? `Max length of ${fieldName} is ${maxLengthValue} symbols` : undefined \r\n}\r\n\r\nexport const minLength = (minLengthValue, fieldName='item') => value => {\r\n    return value.length && value.length < minLengthValue ? `Min lenght of ${fieldName} is ${minLengthValue} symbols` : undefined\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__wL-eF\",\"loginBlock\":\"Header_loginBlock__19BMJ\"};","import React from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'} />\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToPropsForRedirect) (RedirectComponent);\r\n}\r\n","import { profileAPI } from \"../api/api\"\r\n\r\nconst ADD_POST = 's_way_1/pofile/ADD_POST'\r\nconst DELETE_POST = 's_way_1/pofile/DELETE_POST'\r\nconst SET_USER_PROFILE = 's_way_1/pofile/SET_USER_PROFILE'\r\nconst SET_STATUS = 's_way_1/pofile/SET_STATUS'\r\nconst UPLOAD_PHOTO_SUCCESS = 's_way_1/pofile/UPLOAD_PHOTO_SUCCESS'\r\n// const SAVE_PROFILE = 's_way_1/pofile/SAVE_PROFILE'\r\n\r\nlet initialState = {\r\n    posts: [\r\n        { id: 1, message: \"Hi, how are you?\", likesCounts: 15 },\r\n        { id: 2, message: \"It's my first post\", likesCounts: 20 },\r\n        { id: 3, message: \"BlaBla\", likesCounts: 30 },\r\n        { id: 4, message: \"Lala\", likesCounts: 40 }\r\n    ],\r\n    status: null,\r\n    userProfile: null\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, { id: 5, message: action.newPostText, likesCounts: 0 }]\r\n            };\r\n        case DELETE_POST:\r\n            return { ...state, posts: state.posts.filter(p => p.id !== action.postId) }\r\n        case SET_USER_PROFILE:\r\n            return { ...state, userProfile: action.userProfile};\r\n        case SET_STATUS:\r\n            return { ...state, status: action.status }\r\n        case UPLOAD_PHOTO_SUCCESS:\r\n            return { ...state, userProfile: {...state.userProfile, photos: action.photos}}\r\n        // case SAVE_PROFILE:\r\n        //     return { ...state, userProfile: {...state.userProfile, userProfile: action.userProfile}}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPost = (newPostText) =>  ({ type: ADD_POST, newPostText })\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId})\r\nexport const setUserProfile = (userProfile) =>  ({ type: SET_USER_PROFILE, userProfile })\r\nexport const setStatus = (status) =>  ({ type: SET_STATUS, status })\r\nexport const uploadPhotoSuccess = (photos) => ({ type: UPLOAD_PHOTO_SUCCESS, photos})\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    const response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    const response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0)\r\n    {\r\n        dispatch(setStatus(status));\r\n    }\r\n    else\r\n    {\r\n        dispatch(setStatus('Can\\'t load status message from server'));\r\n    }\r\n} \r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    const response = await profileAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const uploadPhoto = (file) => async (dispatch) => {\r\n    const response = await profileAPI.uploadPhoto(file);\r\n    if (response.status === 200)\r\n    {\r\n        dispatch(uploadPhotoSuccess(response.data.data.photos));\r\n    }\r\n}\r\n\r\nexport const saveProfile = (profileData) => async (dispatch, getState) => {\r\n    const response = await profileAPI.saveProfile(profileData);\r\n    if (response.data.resultCode === 0)\r\n    {        \r\n        // dispatch(setUserProfile(profileData)) //My variant\r\n        dispatch(getUserProfile(getState().auth.userId))\r\n    }\r\n}\r\n\r\nexport default profileReducer;"],"sourceRoot":""}