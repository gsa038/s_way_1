{"version":3,"sources":["hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","DialogItem","path","id","className","s","dialog","active","name","Message","messageItemClassName","message","isMyMessage","messageItem","myMessage","textArea","InputArea","maxlength20","maxlength","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","sendBlock","sendTextAreaBlock","Field","component","validate","required","placeholder","sendTextArea","sendButtonBlock","sendButton","Dialogs","dialogsElements","dialogsPage","dialogs","map","d","key","messagesElements","messages","m","dialogsItems","verticalSeparator","values","sendMessage","newMessageText","DialogsContainer","compose","dispatch"],"mappings":"8MAIIA,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,SAGVE,EAAmB,SAACC,GAAe,IAEtCC,EAFqC,uKAInC,OAAKC,KAAKC,MAAMN,OAET,kBAACG,EAAcE,KAAKC,OAFI,kBAAC,IAAD,CAAUC,GAAI,eAJV,GAEXC,IAAML,WAQtC,OAAOM,YAAQX,EAARW,CAAqCL,K,oBCjBhDM,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,kBAAoB,mCAAmC,SAAW,0BAA0B,UAAY,2BAA2B,aAAe,8BAA8B,gBAAkB,iCAAiC,WAAa,8B,oBCAlVD,EAAOC,QAAU,CAAC,OAAS,2BAA2B,OAAS,6B,oBCA/DD,EAAOC,QAAU,CAAC,YAAc,6BAA6B,UAAY,6B,wGCc1DC,EAXI,SAACN,GAEhB,IAAIO,EAAO,YAAcP,EAAMQ,GAE/B,OACI,yBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,QAC/B,kBAAC,IAAD,CAASX,GAAIM,GAAOP,EAAMa,Q,kBCIvBC,EAXC,SAACd,GAEb,IAAMe,EAAuBf,EAAMgB,QAAQC,YACPP,IAAEQ,YAAc,IAAMR,IAAES,UACxBT,IAAEQ,YAEtC,OACI,yBAAKT,UAAWM,GAAuBf,EAAMgB,QAAQA,U,iCCFvDI,EAAWC,YAAU,YA2BrBC,EAAcC,YAAU,IAoBxBC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAlBL,SAACzB,GACpB,OACI,0BAAM2B,SAAU3B,EAAM4B,cAClB,yBAAKnB,UAAWC,IAAEmB,WACd,yBAAKpB,UAAWC,IAAEoB,mBACd,kBAACC,EAAA,EAAD,CAAOC,UAAWZ,EAAUP,KAAK,iBAC7BoB,SAAU,CAACC,IAAUZ,GACrBa,YAAY,0BACZ1B,UAAWC,IAAE0B,gBAErB,yBAAK3B,UAAWC,IAAE2B,iBACd,4BAAQ5B,UAAWC,IAAE4B,YAArB,sBASLC,EA/CC,SAACvC,GAEb,IAAIwC,EAAkBxC,EAAMyC,YAAYC,QAAQC,KAAI,SAAAC,GAAC,OAAK,kBAAC,EAAD,CAAY/B,KAAM+B,EAAE/B,KAAMgC,IAAKD,EAAEpC,GAAIA,GAAIoC,EAAEpC,QACjGsC,EAAmB9C,EAAMyC,YAAYM,SAASJ,KAAI,SAAAK,GAAC,OAAK,kBAAC,EAAD,CAAShC,QAASgC,EAAGH,IAAKG,EAAExC,QAMxF,OACI,yBAAKC,UAAWC,IAAEgC,SACd,yBAAKjC,UAAWC,IAAEuC,cACbT,GAEL,yBAAK/B,UAAWC,IAAEwC,oBAClB,6BACI,yBAAKzC,UAAWC,IAAEqC,UACbD,GAEL,kBAACtB,EAAD,CAAqBG,SAdb,SAACwB,GACjBnD,EAAMoD,YAAYD,EAAOE,sB,iCCI3BC,EAAmBC,YACrBpD,aAfkB,SAACV,GACnB,MAAO,CACHgD,YAAahD,EAAMgD,gBAIF,SAACe,GACtB,MAAO,CACPJ,YAAa,SAACC,GACNG,EAASJ,YAAYC,SAO7BzD,IAFqB2D,CAGpBhB,GAEUe","file":"static/js/5.e535a41c.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'} />\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToPropsForRedirect) (RedirectComponent);\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__xbVNp\",\"dialogsItems\":\"Dialogs_dialogsItems__3ESiR\",\"verticalSeparator\":\"Dialogs_verticalSeparator__QOGh1\",\"messages\":\"Dialogs_messages__2Y5aj\",\"sendBlock\":\"Dialogs_sendBlock__3DyBb\",\"sendTextArea\":\"Dialogs_sendTextArea__2AFUk\",\"sendButtonBlock\":\"Dialogs_sendButtonBlock__j25PA\",\"sendButton\":\"Dialogs_sendButton__1d-Ey\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"active\":\"DialogItem_active__1iHEV\",\"dialog\":\"DialogItem_dialog__28A9x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageItem\":\"Message_messageItem__25r_9\",\"myMessage\":\"Message_myMessage__3uX6v\"};","import React from 'react';\r\nimport s from './DialogItem.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n\r\n    let path = \"/dialogs/\" + props.id;\r\n    \r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './Message.module.css';\r\n\r\nconst Message = (props) => {\r\n\r\n    const messageItemClassName = props.message.isMyMessage ? \r\n                                        s.messageItem + ' ' + s.myMessage : \r\n                                        s.messageItem;\r\n\r\n    return (\r\n        <div className={messageItemClassName}>{props.message.message}</div>\r\n    );\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport { reduxForm, Field} from 'redux-form';\r\nimport { maxlength, required } from '../../utils/validators/validators';\r\nimport { InputArea } from '../common/FormsControls/FormsControls';\r\n\r\nconst textArea = InputArea(\"textarea\")\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogsElements = props.dialogsPage.dialogs.map(d => (<DialogItem name={d.name} key={d.id} id={d.id} />));\r\n    let messagesElements = props.dialogsPage.messages.map(m => (<Message message={m} key={m.id} />));\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.verticalSeparator}></div>\r\n            <div>\r\n                <div className={s.messages}>\r\n                    {messagesElements}\r\n                </div>\r\n                <AddMessageFormRedux onSubmit={addNewMessage} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst maxlength20 = maxlength(20); \r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className={s.sendBlock}>\r\n                <div className={s.sendTextAreaBlock}>\r\n                    <Field component={textArea} name=\"newMessageText\"\r\n                        validate={[required, maxlength20]}\r\n                        placeholder=\"Enter your message here\"\r\n                        className={s.sendTextArea} />\r\n                </div>\r\n                <div className={s.sendButtonBlock}>\r\n                    <button className={s.sendButton}>Send message</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'}) (AddMessageForm)\r\n\r\nexport default Dialogs;","import Dialogs from './Dialogs';\r\nimport { sendMessage } from '../../redux/dialogs-reducer';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n    sendMessage: (newMessageText) => {\r\n            dispatch(sendMessage(newMessageText));\r\n        }\r\n    }\r\n}\r\n\r\nconst DialogsContainer = compose(\r\n    connect(mapStateToProps, mapDispatchToProps),    \r\n    withAuthRedirect)\r\n    (Dialogs);\r\n\r\nexport default DialogsContainer;"],"sourceRoot":""}