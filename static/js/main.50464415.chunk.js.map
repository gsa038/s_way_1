{"version":3,"sources":["components/Navbar/NavMenu/NavMenu.module.css","redux/dialogs-reducer.js","redux/users-reducer.js","components/Navbar/NavFriends/NavFriends.module.css","components/common/Preloader/Preloader.module.css","api/api.js","serviceWorker.js","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/Navbar/NavMenu/NavMenu.jsx","components/Navbar/NavFriends/NavFriendsItem/NavFriendsItem.jsx","components/Navbar/NavFriends/NavFriends.jsx","components/Navbar/Navbar.jsx","components/Navbar/NavbarContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","components/Login/LoginContainer.jsx","redux/app-reducer.js","redux/navigation-reducer.js","redux/redux-store.js","hoc/withSuspense.js","App.jsx","index.js","components/common/FormsControls/FormsControls.jsx","utils/validators/validators.js","components/common/FormsControls/FormsControl.module.css","components/common/Preloader/Preloader.jsx","components/Navbar/NavFriends/NavFriendsItem/NavFriendsItem.module.css","components/Header/Header.module.css","redux/profile-reducer.js"],"names":["module","exports","SEND_MESSAGE","initialState","dialogs","id","name","messages","message","dialogId","isMyMessage","sendMessage","newMessageText","type","dialogsReducer","state","action","TOGGLE_FOLLOW","SET_USERS","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","toggleFollow","userId","toggleIsFetching","toggleFollowingProgress","getUsers","page","dispatch","a","usersAPI","data","items","totalCount","follow","resultCode","usersReducer","map","u","followed","filter","instance","axios","withCredentials","baseURL","headers","get","then","response","post","delete","getProfile","console","warn","profileAPI","authAPI","authMe","login","email","password","rememberMe","captchaString","captcha","logout","getCaptcha","getStatus","updateStatus","status","put","uploadPhoto","photo","formData","FormData","append","Boolean","window","location","hostname","match","News","props","Music","Settings","NavMenu","className","s","nav","item","active","to","activeClassName","NavFriendsItem","ava_img","src","ava","alt","nickname","NavFriends","NavFriendsElements","friends","f","key","friendsElements","Navbar","NavbarContainer","connect","navigationData","Header","header","loginBlock","isAuth","onClick","doLogout","SET_USER_DATA","SET_CAPTCHA_IRL","captchaUrl","setAuthUserData","payload","setCaptchaUrl","getAuthUserData","authReducer","HeaderContainer","this","React","Component","auth","maxlength15","maxlength","maxlength20","input","InputArea","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","createField","required","formStyle","formSummaryError","Login","doLogin","url","length","stopSubmit","_error","initialized","appReducer","navigationReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","usersPage","app","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddlware","__store__","withSuspense","fallback","Preloader","DialogsContainer","lazy","ProfileContainer","UsersContainer","App","initializeApp","path","render","AppContainer","withRouter","promise","Promise","all","MainApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","InputType","meta","touched","hasError","styles","formControl","placeholder","validators","component","text","validate","value","undefined","maxLengthValue","preloader","width","height","stroke","ADD_POST","DELETE_POST","SET_STATUS","posts","likesCounts","userProfile","addPost","newPostText","setUserProfile","setStatus","getUserProfile","file","photos","p","postId"],"mappings":"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","file":"static/js/main.50464415.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"NavMenu_nav__3p8TW\",\"item\":\"NavMenu_item__3hfDF\",\"active\":\"NavMenu_active__1OZW2\"};","const SEND_MESSAGE = 's_way_1/dialogs/SEND-MESSAGE'\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        { id: 1, name: \"Helen\" },\r\n        { id: 2, name: \"Alex\" },\r\n        { id: 3, name: \"Andrey\" },\r\n        { id: 4, name: \"Ivan\" }\r\n    ],\r\n    messages: [\r\n        { id: 1, message: \"Hi\", dialogId: 2, isMyMessage: true },\r\n        { id: 2, message: \"How is your name?\", dialogId: 2, isMyMessage: true },\r\n        { id: 3, message: \"My name is ...\", dialogId: 2, isMyMessage: false },\r\n        { id: 4, message: \"Yet another message\", dialogId: 2, isMyMessage: true },\r\n        { id: 5, message: \"Yet another message\", dialogId: 2, isMyMessage: false }\r\n    ]\r\n}\r\n\r\nconst dialogsReducer =  (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SEND_MESSAGE:\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, { id: 6, message: action.newMessageText, dialogId: 2, isMyMessage: true } ]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessage = (newMessageText) => ({ type: SEND_MESSAGE, newMessageText })\r\n\r\nexport default dialogsReducer;","import {usersAPI} from '../api/api';\r\n\r\nconst TOGGLE_FOLLOW = 's_way_1/users/TOGGLE_FOLLOW'\r\nconst SET_USERS = 's_way_1/users/SET_USERS'\r\nconst SET_CURRENT_PAGE = 's_way_1/users/SET_CURRENT_PAGE'\r\nconst SET_TOTAL_COUNT = 's_way_1/users/SET_TOTAL_COUNT'\r\nconst TOGGLE_IS_FETCHING = 's_way_1/users/TOGGLE_IS_FETCHING'\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 's_way_1/users/TOGGLE_IS_FOLLOWING_PROGRESS'\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 100,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n}\r\n\r\nconst usersReducer = ( state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n        case TOGGLE_FOLLOW:\r\n            return {\r\n                ...state,\r\n                // NOT WORK with updateObjectInArray from objects-helper.js // 90-redux-ducks video\r\n                // users: updateObjectInArray(state.users, action.userId, 'id', !state.users[action.userId].followed)\r\n                users: state.users.map( u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: !u.followed}\r\n                    }\r\n                return u;\r\n                })            \r\n            }\r\n        case SET_USERS: {\r\n            return { ...state, users: action.users }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return { ...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_COUNT: {\r\n            return { ...state, totalUsersCount: action.totalUsersCount}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return { ...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return { ...state, \r\n                followingInProgress: action.followingInProgress \r\n                ? [...state.followingInProgress, action.userId]\r\n                : [state.followingInProgress.filter(id => id !== action.userId)]}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const toggleFollow = (userId) => ({type: TOGGLE_FOLLOW, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_COUNT, totalUsersCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingProgress = (followingInProgress, userId) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, followingInProgress, userId})\r\n\r\nexport const getUsers = (page, pageSize) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    dispatch(setCurrentPage(page));\r\n\r\n    let data = await usersAPI.getUsers(page, pageSize);\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setUsers(data.items));\r\n    dispatch(setTotalUsersCount(data.totalCount));\r\n}\r\n\r\nexport const follow = (follow, userId) => async (dispatch) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let data = await usersAPI.follow(follow, userId);\r\n    if (data.resultCode === 0 || 1) {\r\n        dispatch(toggleFollow(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport default usersReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendsElements\":\"NavFriends_friendsElements__1xggS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__3axXf\"};","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"40a499b6-4421-4c8e-b336-09492ab319c5\"\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n\r\n    getUsers(currentPage, pageSize) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n        .then(response => response.data)\r\n    },\r\n    follow(follow, userId) {\r\n        return (follow ? instance.post(`follow/${userId}`) : instance.delete(`follow/${userId}`))\r\n            .then(response => response.data)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn(\"Obsolete method. Please use ProfileAPI object for getProfile\")\r\n        return profileAPI.getProfile(userId)\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n\r\n    authMe() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe=false, captchaString) {\r\n        return instance.post('/auth/login', {email: email, password: password, rememberMe: rememberMe, captcha: captchaString});\r\n    },\r\n    logout() {\r\n        return instance.delete('/auth/login');\r\n    },\r\n    getCaptcha() {\r\n        return instance.get('/security/get-captcha-url')\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get('profile/status/' + userId)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put('profile/status/', {status: status});\r\n    },\r\n    uploadPhoto(photo) {\r\n        const formData = new FormData();\r\n        formData.append('image', photo);\r\n        return instance.put('profile/photo/', formData, {\r\n            'Content-Type': 'multipath/form-data'\r\n        })\r\n    }\r\n}\r\n\r\nexport default null;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport './News.module.css'\r\n\r\nconst News = (props) => {\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default News;","import React from 'react'\r\nimport './Music.module.css'\r\n\r\nconst Music = (props) => {\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Music;","import React from 'react'\r\nimport './Settings.module.css'\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Settings;","import React from 'react';\r\nimport s from './NavMenu.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\n\r\nconst NavMenu = (props) => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/profile\" activeClassName={s.active}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.active}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/users\" activeClassName={s.active}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/news\" activeClassName={s.active}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/music\" activeClassName={s.active}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/settings\" activeClassName={s.active}>Settings</NavLink>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default NavMenu;","import React from 'react';\r\nimport s from './NavFriendsItem.module.css';\r\n\r\nconst NavFriendsItem = (props) => {\r\n    return (\r\n        <div className={s.NavFriendsItem}>\r\n            <img className={s.ava_img} src={props.ava} alt=\"\"/>\r\n            <span className={s.nickname}>{props.nickname}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NavFriendsItem;","import React from 'react';\r\nimport s from './NavFriends.module.css';\r\nimport NavFriendsItem from './NavFriendsItem/NavFriendsItem'; \r\n\r\nconst NavFriends = (props) => {\r\n    \r\n    let NavFriendsElements = props.friends.map(f => (<NavFriendsItem nickname={f.nickname} key={f.id} ava={f.ava} />))\r\n\r\n    return (\r\n        <div>\r\n            <h3>Friends</h3>\r\n            <div className={s.friendsElements}>\r\n                { NavFriendsElements }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NavFriends;","import React from 'react';\r\nimport NavMenu from './NavMenu/NavMenu';\r\nimport NavFriends from './NavFriends/NavFriends';\r\n\r\nconst Navbar = (props) => {\r\n  return (\r\n    <div>\r\n      <NavMenu />\r\n      <NavFriends friends={props.friends} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;","// import React from 'react';\r\nimport Navbar from './Navbar';\r\nimport {connect} from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    friends: state.navigationData.friends\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n\r\n  }\r\n}\r\n\r\nlet NavbarContainer = connect(mapStateToProps, mapDispatchToProps) (Navbar);\r\n\r\nexport default NavbarContainer;","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img src=\"https://www.quizony.com/company-name-generator/imageForSharing.jpg\" alt=\"Company name\"></img>\r\n            <div className={s.loginBlock}>\r\n                {props.isAuth \r\n                ? <div>\r\n                    <div>{props.login} : {props.userId}</div>\r\n                    <button onClick={props.doLogout}>Log out</button>\r\n                  </div>\r\n                : <NavLink to={'/login'}>Login</NavLink> }\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import { authAPI } from \"../api/api\";\r\nimport { stopSubmit } from 'redux-form';\r\n\r\nconst SET_USER_DATA = 's_way_1/auth/SET_USER_DATA';\r\nconst SET_CAPTCHA_IRL = 's_way_1/auth/SET_CAPTCHA_IRL';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null\r\n};\r\n\r\nconst authReducer = ( state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n                };\r\n        case SET_CAPTCHA_IRL:\r\n            return {\r\n                ...state,\r\n                captchaUrl: action.captchaUrl\r\n                };\r\n        default:\r\n            return state;\r\n        };\r\n};\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth, captchaUrl=null) => ({type: SET_USER_DATA, payload: {userId, email, login, isAuth, captchaUrl}});\r\nexport const setCaptchaUrl = (captchaUrl=null) => ({type: SET_CAPTCHA_IRL, captchaUrl})\r\n\r\nexport const getCaptcha = () => async (dispatch) => {\r\n    let response = await authAPI.getCaptcha()\r\n    if (response.data.url) {\r\n        dispatch(setCaptchaUrl(response.data.url));\r\n    }\r\n}\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.authMe()\r\n    if (response.data.resultCode === 0) {\r\n        let {id, login, email} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    };\r\n};\r\n\r\nexport const doLogin = (email, password, rememberMe, captchaString) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe, captchaString)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData());\r\n    }\r\n    else {\r\n        if (response.data.resultCode === 10) {\r\n            dispatch(getCaptcha())\r\n        }\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\"; \r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    };\r\n};\r\n\r\nexport const doLogout = () => async (dispatch) => {\r\n    let response = await authAPI.logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n};\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport {doLogout} from '../../redux/auth-reducer';\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n    userId: state.auth.userId\r\n})\r\nexport default connect(mapStateToProps, {doLogout}) (HeaderContainer);","import React from 'react';\r\n// import style from './Login.module.css';\r\nimport formStyle from '../common/FormsControls/FormsControl.module.css'\r\nimport { reduxForm } from 'redux-form';\r\nimport { required, maxlength } from '../../utils/validators/validators';\r\nimport { InputArea, createField } from '../common/FormsControls/FormsControls';\r\nimport { Redirect } from 'react-router';\r\n\r\nconst maxlength15 = maxlength(15)\r\nconst maxlength20 = maxlength(20)\r\nconst input = InputArea(\"input\")\r\n\r\nconst LoginForm = ({handleSubmit, error, captchaUrl}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div >\r\n                {/* <div> */}\r\n                    {/* <Field placeholder={\"Email...\"} name={'email'} component={input}\r\n                        validate={[required, maxlength15]} /> */}\r\n                {/* </div> */}\r\n                {/* <div>\r\n                    <Field placeholder={\"Password...\"} name={'password'} component={input} type=\"password\"\r\n                        validate={[required, maxlength20]} />\r\n                </div> */}\r\n                {/* <div>\r\n                    <Field component={input} name={'rememberMe'} type={\"checkbox\"} />\r\n                    <span>remember me</span>\r\n                </div> */}\r\n                {createField(\"Email...\", \"email\", [required, maxlength15], input )}\r\n                {createField(\"Password...\", \"password\", [required, maxlength20], input, {type: \"password\"} )}\r\n                {createField(null, \"rememberMe\", [], input, {type: \"checkbox\"}, \"remember me\" )}\r\n                {error &&\r\n                    <div className={formStyle.formSummaryError}>\r\n                        {error}\r\n                    </div>}\r\n                <div>\r\n                    <button>Sign in</button>\r\n                </div>\r\n                {captchaUrl &&\r\n                    <div>\r\n                        <div>\r\n                            <img src={captchaUrl} alt=\"CaptchaImg\"/>\r\n                        </div>\r\n                        {/* <div>\r\n                            <Field component={input} name={'captchaString'} placeholder={\"Input captcha data\"} />\r\n                        </div> */}\r\n                        {createField(\"Input captcha data\", \"captchaString\", [], input )}\r\n                    </div>\r\n                }\r\n            </div>\r\n        </form>\r\n\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.doLogin(formData.email, formData.password, formData.rememberMe, formData.captchaString)\r\n    }\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl} />\r\n    </div>\r\n}\r\n\r\nexport default Login;","import { connect } from 'react-redux';\r\nimport {doLogin, doLogout} from '../../redux/auth-reducer';\r\nimport Login from './Login';\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    captchaUrl: state.auth.captchaUrl\r\n})\r\n\r\nexport default connect(mapStateToProps, { doLogin, doLogout }) (Login);","import { getAuthUserData } from \"./auth-reducer\";\r\n\r\nconst SET_INITIALIZED = 's_way_1/app/SET_INITIALIZED';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = ( state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n        case SET_INITIALIZED:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n                };\r\n        default:\r\n            return state;\r\n        };\r\n};\r\n\r\nexport const setInitializedSuccess = () => ({type: SET_INITIALIZED});\r\n \r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise]).then(() => { \r\n        dispatch(setInitializedSuccess());\r\n    });\r\n}\r\n\r\nexport default appReducer;","let initialState = {\r\n    friends: [\r\n        {id: 1, nickname: 'Dimon', ava: 'https://www.allremont59.ru/wp-content/uploads/2018/02/anonymity-300x300.jpg'},\r\n        {id: 2, nickname: 'Vasiliy', ava: 'https://www.allremont59.ru/wp-content/uploads/2018/02/anonymity-300x300.jpg'},\r\n        {id: 3, nickname: 'tilipon85',ava: 'https://www.allremont59.ru/wp-content/uploads/2018/02/anonymity-300x300.jpg'},\r\n        {id: 4, nickname: 'tilipon85',ava: 'https://www.allremont59.ru/wp-content/uploads/2018/02/anonymity-300x300.jpg'},\r\n        {id: 5, nickname: 'tilipon85',ava: 'https://www.allremont59.ru/wp-content/uploads/2018/02/anonymity-300x300.jpg'},\r\n        {id: 6, nickname: 'tilipon85',ava: 'https://www.allremont59.ru/wp-content/uploads/2018/02/anonymity-300x300.jpg'},\r\n        {id: 7, nickname: 'tilipon85',ava: 'https://www.allremont59.ru/wp-content/uploads/2018/02/anonymity-300x300.jpg'},\r\n        {id: 8, nickname: 'tilipon85',ava: 'https://www.allremont59.ru/wp-content/uploads/2018/02/anonymity-300x300.jpg'},\r\n    ]\r\n}\r\n\r\nconst navigationReducer =  (state = initialState, action) => state;\r\n\r\nexport default navigationReducer;","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport navigationReducer from \"./navigation-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddlware from 'redux-thunk';\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport appReducer from \"./app-reducer\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer, \r\n    dialogsPage: dialogsReducer, \r\n    navigationData: navigationReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddlware)));\r\n\r\nwindow.__store__ = store;\r\n\r\n\r\nexport default store;","import React, { Suspense } from 'react';\r\nimport Preloader from '../components/common/Preloader/Preloader';\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <Suspense fallback={<Preloader />}>\r\n            <Component />\r\n        </Suspense>\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport News from \"./components/News/News\";\r\nimport Music from \"./components/Music/Music\";\r\nimport Settings from \"./components/Settings/Settings\";\r\nimport { Route, withRouter } from \"react-router\";\r\n// import DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\nimport NavbarContainer from \"./components/Navbar/NavbarContainer\";\r\n// import UsersContainer from \"./components/Users/UsersContainer\";\r\n// import ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport LoginPage from \"./components/Login/LoginContainer\";\r\nimport { connect, Provider } from \"react-redux\";\r\nimport { initializeApp } from './redux/app-reducer';\r\nimport { compose } from \"redux\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport store from \"./redux/redux-store\";\r\nimport { withSuspense } from \"./hoc/withSuspense\";\r\n\r\n\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\r\n\r\nclass App extends React.Component {\r\n\r\n  componentDidMount() {\r\n    this.props.initializeApp();\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.initialized) {\r\n      return <Preloader />\r\n    }\r\n    else {\r\n      return (\r\n        <div className=\"app-wrapper\">\r\n          <HeaderContainer />\r\n          <NavbarContainer />\r\n          <div className=\"app-wrapper-content\">\r\n            {/* <Route path='/' render={() => <ProfileContainer />} /> */}\r\n            <Route path='/profile/:userId?' \r\n                    render={withSuspense(ProfileContainer)} />\r\n            <Route path='/login' render={() => <LoginPage />} />\r\n            <Route path='/dialogs' \r\n                    render={withSuspense(DialogsContainer)} />\r\n            <Route path='/news  ' render={() => <News />} />\r\n            <Route path='/music' render={() => <Music />} />\r\n            <Route path='/users' \r\n                    render={withSuspense(UsersContainer)} />\r\n            <Route path='/settings' render={() => <Settings />} />\r\n          </div>\r\n        </div>\r\n      );\r\n    };\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  initialized: state.app.initialized\r\n})\r\n\r\nlet AppContainer = compose(\r\n  withRouter,\r\n  connect(mapStateToProps, { initializeApp }))(App);\r\n\r\n\r\nlet MainApp = (props) => {\r\n  return (\r\n  <HashRouter>\r\n    <Provider store={store}>\r\n      <AppContainer />\r\n    </Provider>\r\n  </HashRouter >\r\n)}\r\n\r\nexport default MainApp;","import * as serviceWorker from './serviceWorker';\r\n// import store from './redux/redux-store';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n// import App from './App';\r\n// import { BrowserRouter } from \"react-router-dom\";\r\n// import { Provider } from 'react-redux';\r\nimport MainApp from './App';\r\n\r\n// setInterval(() => {\r\n//     store.dispatch({type: \"FAKE\"})\r\n// }, 1000)\r\n\r\nReactDOM.render(\r\n    <MainApp />, document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React from 'react';\r\nimport styles from './FormsControl.module.css';\r\nimport { Field } from 'redux-form';\r\n\r\n\r\nexport const InputArea = InputType => ({input, meta: {touched, error}, ...props}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                <InputType {...input} {...props}/>\r\n            </div>\r\n            { hasError && <span>{error}</span> }\r\n        </div>   \r\n    )    \r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name} component={component} validate={validators} {...props}  /> {text}\r\n    </div>\r\n)","export const required = value => {\r\n     return value ? undefined : `Field is required` \r\n}\r\n\r\nexport const maxlength = maxLengthValue => value => {\r\n    return value.length && value.length > maxLengthValue ? `Max length of post is ${maxLengthValue} symbols` : undefined \r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControl_formControl__1PMmA\",\"error\":\"FormsControl_error__3Zj-b\",\"formSummaryError\":\"FormsControl_formSummaryError__2JJXT\"};","\r\nimport React from 'react';\r\nimport s from './Preloader.module.css';\r\nimport * as SVGLoaders from 'svg-loaders-react';\r\n\r\nlet Preloader = (props) => {\r\n    return <div className={s.preloader}>\r\n        <SVGLoaders.TailSpin width='72' height='72' stroke=\"black\" />\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavFriendsItem\":\"NavFriendsItem_NavFriendsItem__1Pv9j\",\"ava_img\":\"NavFriendsItem_ava_img__QU4EC\",\"nickname\":\"NavFriendsItem_nickname__1QeKw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__wL-eF\",\"loginBlock\":\"Header_loginBlock__19BMJ\"};","import { profileAPI } from \"../api/api\"\r\n\r\nconst ADD_POST = 's_way_1/pofile/ADD_POST'\r\nconst DELETE_POST = 's_way_1/pofile/DELETE_POST'\r\nconst SET_USER_PROFILE = 's_way_1/pofile/SET_USER_PROFILE'\r\nconst SET_STATUS = 's_way_1/pofile/SET_STATUS'\r\nconst UPLOAD_PHOTO_SUCCESS = 's_way_1/pofile/UPLOAD_PHOTO_SUCCESS'\r\n\r\nlet initialState = {\r\n    posts: [\r\n        { id: 1, message: \"Hi, how are you?\", likesCounts: 15 },\r\n        { id: 2, message: \"It's my first post\", likesCounts: 20 },\r\n        { id: 3, message: \"BlaBla\", likesCounts: 30 },\r\n        { id: 4, message: \"Lala\", likesCounts: 40 }\r\n    ],\r\n    status: null,\r\n    userProfile: null\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, { id: 5, message: action.newPostText, likesCounts: 0 }]\r\n            };\r\n        case DELETE_POST:\r\n            return { ...state, posts: state.posts.filter(p => p.id !== action.postId) }\r\n        case SET_USER_PROFILE:\r\n            return { ...state, userProfile: action.userProfile};\r\n        case SET_STATUS:\r\n            return { ...state, status: action.status }\r\n        case UPLOAD_PHOTO_SUCCESS:\r\n            return { ...state, userProfile: {...state.userProfile, photos: action.photos}}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPost = (newPostText) =>  ({ type: ADD_POST, newPostText })\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId})\r\nexport const setUserProfile = (userProfile) =>  ({ type: SET_USER_PROFILE, userProfile })\r\nexport const setStatus = (status) =>  ({ type: SET_STATUS, status })\r\nexport const uploadPhotoSuccess = (photos) => ({ type: UPLOAD_PHOTO_SUCCESS, photos})\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0)\r\n    {\r\n        dispatch(setStatus(status));\r\n    }\r\n    else\r\n    {\r\n        dispatch(setStatus('Can\\'t load status message from server'));\r\n    }\r\n} \r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const uploadPhoto = (file) => async (dispatch) => {\r\n    let response = await profileAPI.uploadPhoto(file);\r\n    if (response.status === 200)\r\n    {\r\n        dispatch(uploadPhotoSuccess(response.data.data.photos));\r\n    }\r\n}\r\n\r\nexport default profileReducer;"],"sourceRoot":""}